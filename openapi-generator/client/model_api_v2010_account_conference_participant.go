/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountConferenceParticipant struct for ApiV2010AccountConferenceParticipant
type ApiV2010AccountConferenceParticipant struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The SID of the Call the resource is associated with
	CallSid NullableString `json:"call_sid,omitempty"`
	// The SID of the participant who is being `coached`
	CallSidToCoach NullableString `json:"call_sid_to_coach,omitempty"`
	// Indicates if the participant changed to coach
	Coaching NullableBool `json:"coaching,omitempty"`
	// The SID of the conference the participant is in
	ConferenceSid NullableString `json:"conference_sid,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// Whether the conference ends when the participant leaves
	EndConferenceOnExit NullableBool `json:"end_conference_on_exit,omitempty"`
	// Whether the participant is on hold
	Hold NullableBool `json:"hold,omitempty"`
	// The label of this participant
	Label NullableString `json:"label,omitempty"`
	// Whether the participant is muted
	Muted NullableBool `json:"muted,omitempty"`
	// Whether the conference starts when the participant joins the conference
	StartConferenceOnEnter NullableBool `json:"start_conference_on_enter,omitempty"`
	// The status of the participant's call in a session
	Status NullableString `json:"status,omitempty"`
	// The URI of the resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountConferenceParticipant instantiates a new ApiV2010AccountConferenceParticipant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountConferenceParticipant() *ApiV2010AccountConferenceParticipant {
	this := ApiV2010AccountConferenceParticipant{}
	return &this
}

// NewApiV2010AccountConferenceParticipantWithDefaults instantiates a new ApiV2010AccountConferenceParticipant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountConferenceParticipantWithDefaults() *ApiV2010AccountConferenceParticipant {
	this := ApiV2010AccountConferenceParticipant{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountConferenceParticipant) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetCallSid returns the CallSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetCallSid() string {
	if o == nil || o.CallSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.CallSid.Get()
}

// GetCallSidOk returns a tuple with the CallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetCallSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallSid.Get(), o.CallSid.IsSet()
}

// HasCallSid returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasCallSid() bool {
	if o != nil && o.CallSid.IsSet() {
		return true
	}

	return false
}

// SetCallSid gets a reference to the given NullableString and assigns it to the CallSid field.
func (o *ApiV2010AccountConferenceParticipant) SetCallSid(v string) {
	o.CallSid.Set(&v)
}
// SetCallSidNil sets the value for CallSid to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetCallSidNil() {
	o.CallSid.Set(nil)
}

// UnsetCallSid ensures that no value is present for CallSid, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetCallSid() {
	o.CallSid.Unset()
}

// GetCallSidToCoach returns the CallSidToCoach field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetCallSidToCoach() string {
	if o == nil || o.CallSidToCoach.Get() == nil {
		var ret string
		return ret
	}
	return *o.CallSidToCoach.Get()
}

// GetCallSidToCoachOk returns a tuple with the CallSidToCoach field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetCallSidToCoachOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallSidToCoach.Get(), o.CallSidToCoach.IsSet()
}

// HasCallSidToCoach returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasCallSidToCoach() bool {
	if o != nil && o.CallSidToCoach.IsSet() {
		return true
	}

	return false
}

// SetCallSidToCoach gets a reference to the given NullableString and assigns it to the CallSidToCoach field.
func (o *ApiV2010AccountConferenceParticipant) SetCallSidToCoach(v string) {
	o.CallSidToCoach.Set(&v)
}
// SetCallSidToCoachNil sets the value for CallSidToCoach to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetCallSidToCoachNil() {
	o.CallSidToCoach.Set(nil)
}

// UnsetCallSidToCoach ensures that no value is present for CallSidToCoach, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetCallSidToCoach() {
	o.CallSidToCoach.Unset()
}

// GetCoaching returns the Coaching field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetCoaching() bool {
	if o == nil || o.Coaching.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Coaching.Get()
}

// GetCoachingOk returns a tuple with the Coaching field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetCoachingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Coaching.Get(), o.Coaching.IsSet()
}

// HasCoaching returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasCoaching() bool {
	if o != nil && o.Coaching.IsSet() {
		return true
	}

	return false
}

// SetCoaching gets a reference to the given NullableBool and assigns it to the Coaching field.
func (o *ApiV2010AccountConferenceParticipant) SetCoaching(v bool) {
	o.Coaching.Set(&v)
}
// SetCoachingNil sets the value for Coaching to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetCoachingNil() {
	o.Coaching.Set(nil)
}

// UnsetCoaching ensures that no value is present for Coaching, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetCoaching() {
	o.Coaching.Unset()
}

// GetConferenceSid returns the ConferenceSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetConferenceSid() string {
	if o == nil || o.ConferenceSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConferenceSid.Get()
}

// GetConferenceSidOk returns a tuple with the ConferenceSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetConferenceSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConferenceSid.Get(), o.ConferenceSid.IsSet()
}

// HasConferenceSid returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasConferenceSid() bool {
	if o != nil && o.ConferenceSid.IsSet() {
		return true
	}

	return false
}

// SetConferenceSid gets a reference to the given NullableString and assigns it to the ConferenceSid field.
func (o *ApiV2010AccountConferenceParticipant) SetConferenceSid(v string) {
	o.ConferenceSid.Set(&v)
}
// SetConferenceSidNil sets the value for ConferenceSid to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetConferenceSidNil() {
	o.ConferenceSid.Set(nil)
}

// UnsetConferenceSid ensures that no value is present for ConferenceSid, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetConferenceSid() {
	o.ConferenceSid.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountConferenceParticipant) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountConferenceParticipant) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetEndConferenceOnExit returns the EndConferenceOnExit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetEndConferenceOnExit() bool {
	if o == nil || o.EndConferenceOnExit.Get() == nil {
		var ret bool
		return ret
	}
	return *o.EndConferenceOnExit.Get()
}

// GetEndConferenceOnExitOk returns a tuple with the EndConferenceOnExit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetEndConferenceOnExitOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndConferenceOnExit.Get(), o.EndConferenceOnExit.IsSet()
}

// HasEndConferenceOnExit returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasEndConferenceOnExit() bool {
	if o != nil && o.EndConferenceOnExit.IsSet() {
		return true
	}

	return false
}

// SetEndConferenceOnExit gets a reference to the given NullableBool and assigns it to the EndConferenceOnExit field.
func (o *ApiV2010AccountConferenceParticipant) SetEndConferenceOnExit(v bool) {
	o.EndConferenceOnExit.Set(&v)
}
// SetEndConferenceOnExitNil sets the value for EndConferenceOnExit to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetEndConferenceOnExitNil() {
	o.EndConferenceOnExit.Set(nil)
}

// UnsetEndConferenceOnExit ensures that no value is present for EndConferenceOnExit, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetEndConferenceOnExit() {
	o.EndConferenceOnExit.Unset()
}

// GetHold returns the Hold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetHold() bool {
	if o == nil || o.Hold.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Hold.Get()
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetHoldOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hold.Get(), o.Hold.IsSet()
}

// HasHold returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasHold() bool {
	if o != nil && o.Hold.IsSet() {
		return true
	}

	return false
}

// SetHold gets a reference to the given NullableBool and assigns it to the Hold field.
func (o *ApiV2010AccountConferenceParticipant) SetHold(v bool) {
	o.Hold.Set(&v)
}
// SetHoldNil sets the value for Hold to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetHoldNil() {
	o.Hold.Set(nil)
}

// UnsetHold ensures that no value is present for Hold, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetHold() {
	o.Hold.Unset()
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetLabel() string {
	if o == nil || o.Label.Get() == nil {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *ApiV2010AccountConferenceParticipant) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetLabel() {
	o.Label.Unset()
}

// GetMuted returns the Muted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetMuted() bool {
	if o == nil || o.Muted.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Muted.Get()
}

// GetMutedOk returns a tuple with the Muted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetMutedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Muted.Get(), o.Muted.IsSet()
}

// HasMuted returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasMuted() bool {
	if o != nil && o.Muted.IsSet() {
		return true
	}

	return false
}

// SetMuted gets a reference to the given NullableBool and assigns it to the Muted field.
func (o *ApiV2010AccountConferenceParticipant) SetMuted(v bool) {
	o.Muted.Set(&v)
}
// SetMutedNil sets the value for Muted to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetMutedNil() {
	o.Muted.Set(nil)
}

// UnsetMuted ensures that no value is present for Muted, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetMuted() {
	o.Muted.Unset()
}

// GetStartConferenceOnEnter returns the StartConferenceOnEnter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetStartConferenceOnEnter() bool {
	if o == nil || o.StartConferenceOnEnter.Get() == nil {
		var ret bool
		return ret
	}
	return *o.StartConferenceOnEnter.Get()
}

// GetStartConferenceOnEnterOk returns a tuple with the StartConferenceOnEnter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetStartConferenceOnEnterOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartConferenceOnEnter.Get(), o.StartConferenceOnEnter.IsSet()
}

// HasStartConferenceOnEnter returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasStartConferenceOnEnter() bool {
	if o != nil && o.StartConferenceOnEnter.IsSet() {
		return true
	}

	return false
}

// SetStartConferenceOnEnter gets a reference to the given NullableBool and assigns it to the StartConferenceOnEnter field.
func (o *ApiV2010AccountConferenceParticipant) SetStartConferenceOnEnter(v bool) {
	o.StartConferenceOnEnter.Set(&v)
}
// SetStartConferenceOnEnterNil sets the value for StartConferenceOnEnter to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetStartConferenceOnEnterNil() {
	o.StartConferenceOnEnter.Set(nil)
}

// UnsetStartConferenceOnEnter ensures that no value is present for StartConferenceOnEnter, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetStartConferenceOnEnter() {
	o.StartConferenceOnEnter.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ApiV2010AccountConferenceParticipant) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetStatus() {
	o.Status.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConferenceParticipant) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConferenceParticipant) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountConferenceParticipant) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountConferenceParticipant) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountConferenceParticipant) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountConferenceParticipant) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountConferenceParticipant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.CallSid.IsSet() {
		toSerialize["call_sid"] = o.CallSid.Get()
	}
	if o.CallSidToCoach.IsSet() {
		toSerialize["call_sid_to_coach"] = o.CallSidToCoach.Get()
	}
	if o.Coaching.IsSet() {
		toSerialize["coaching"] = o.Coaching.Get()
	}
	if o.ConferenceSid.IsSet() {
		toSerialize["conference_sid"] = o.ConferenceSid.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.EndConferenceOnExit.IsSet() {
		toSerialize["end_conference_on_exit"] = o.EndConferenceOnExit.Get()
	}
	if o.Hold.IsSet() {
		toSerialize["hold"] = o.Hold.Get()
	}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	if o.Muted.IsSet() {
		toSerialize["muted"] = o.Muted.Get()
	}
	if o.StartConferenceOnEnter.IsSet() {
		toSerialize["start_conference_on_enter"] = o.StartConferenceOnEnter.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountConferenceParticipant struct {
	value *ApiV2010AccountConferenceParticipant
	isSet bool
}

func (v NullableApiV2010AccountConferenceParticipant) Get() *ApiV2010AccountConferenceParticipant {
	return v.value
}

func (v *NullableApiV2010AccountConferenceParticipant) Set(val *ApiV2010AccountConferenceParticipant) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountConferenceParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountConferenceParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountConferenceParticipant(val *ApiV2010AccountConferenceParticipant) *NullableApiV2010AccountConferenceParticipant {
	return &NullableApiV2010AccountConferenceParticipant{value: val, isSet: true}
}

func (v NullableApiV2010AccountConferenceParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountConferenceParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


