/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountConnectApp struct for ApiV2010AccountConnectApp
type ApiV2010AccountConnectApp struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The URL to redirect the user to after authorization
	AuthorizeRedirectUrl NullableString `json:"authorize_redirect_url,omitempty"`
	// The company name set for the Connect App
	CompanyName NullableString `json:"company_name,omitempty"`
	// The HTTP method we use to call deauthorize_callback_url
	DeauthorizeCallbackMethod NullableString `json:"deauthorize_callback_method,omitempty"`
	// The URL we call to de-authorize the Connect App
	DeauthorizeCallbackUrl NullableString `json:"deauthorize_callback_url,omitempty"`
	// The description of the Connect App
	Description NullableString `json:"description,omitempty"`
	// The string that you assigned to describe the resource
	FriendlyName NullableString `json:"friendly_name,omitempty"`
	// The URL users can obtain more information
	HomepageUrl NullableString `json:"homepage_url,omitempty"`
	// The set of permissions that your ConnectApp requests
	Permissions []string `json:"permissions,omitempty"`
	// The unique string that identifies the resource
	Sid NullableString `json:"sid,omitempty"`
	// The URI of the resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountConnectApp instantiates a new ApiV2010AccountConnectApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountConnectApp() *ApiV2010AccountConnectApp {
	this := ApiV2010AccountConnectApp{}
	return &this
}

// NewApiV2010AccountConnectAppWithDefaults instantiates a new ApiV2010AccountConnectApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountConnectAppWithDefaults() *ApiV2010AccountConnectApp {
	this := ApiV2010AccountConnectApp{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountConnectApp) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetAuthorizeRedirectUrl returns the AuthorizeRedirectUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetAuthorizeRedirectUrl() string {
	if o == nil || o.AuthorizeRedirectUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.AuthorizeRedirectUrl.Get()
}

// GetAuthorizeRedirectUrlOk returns a tuple with the AuthorizeRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetAuthorizeRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthorizeRedirectUrl.Get(), o.AuthorizeRedirectUrl.IsSet()
}

// HasAuthorizeRedirectUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasAuthorizeRedirectUrl() bool {
	if o != nil && o.AuthorizeRedirectUrl.IsSet() {
		return true
	}

	return false
}

// SetAuthorizeRedirectUrl gets a reference to the given NullableString and assigns it to the AuthorizeRedirectUrl field.
func (o *ApiV2010AccountConnectApp) SetAuthorizeRedirectUrl(v string) {
	o.AuthorizeRedirectUrl.Set(&v)
}
// SetAuthorizeRedirectUrlNil sets the value for AuthorizeRedirectUrl to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetAuthorizeRedirectUrlNil() {
	o.AuthorizeRedirectUrl.Set(nil)
}

// UnsetAuthorizeRedirectUrl ensures that no value is present for AuthorizeRedirectUrl, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetAuthorizeRedirectUrl() {
	o.AuthorizeRedirectUrl.Unset()
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetCompanyName() string {
	if o == nil || o.CompanyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *ApiV2010AccountConnectApp) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetDeauthorizeCallbackMethod returns the DeauthorizeCallbackMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetDeauthorizeCallbackMethod() string {
	if o == nil || o.DeauthorizeCallbackMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeauthorizeCallbackMethod.Get()
}

// GetDeauthorizeCallbackMethodOk returns a tuple with the DeauthorizeCallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetDeauthorizeCallbackMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeauthorizeCallbackMethod.Get(), o.DeauthorizeCallbackMethod.IsSet()
}

// HasDeauthorizeCallbackMethod returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasDeauthorizeCallbackMethod() bool {
	if o != nil && o.DeauthorizeCallbackMethod.IsSet() {
		return true
	}

	return false
}

// SetDeauthorizeCallbackMethod gets a reference to the given NullableString and assigns it to the DeauthorizeCallbackMethod field.
func (o *ApiV2010AccountConnectApp) SetDeauthorizeCallbackMethod(v string) {
	o.DeauthorizeCallbackMethod.Set(&v)
}
// SetDeauthorizeCallbackMethodNil sets the value for DeauthorizeCallbackMethod to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetDeauthorizeCallbackMethodNil() {
	o.DeauthorizeCallbackMethod.Set(nil)
}

// UnsetDeauthorizeCallbackMethod ensures that no value is present for DeauthorizeCallbackMethod, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetDeauthorizeCallbackMethod() {
	o.DeauthorizeCallbackMethod.Unset()
}

// GetDeauthorizeCallbackUrl returns the DeauthorizeCallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetDeauthorizeCallbackUrl() string {
	if o == nil || o.DeauthorizeCallbackUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.DeauthorizeCallbackUrl.Get()
}

// GetDeauthorizeCallbackUrlOk returns a tuple with the DeauthorizeCallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetDeauthorizeCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeauthorizeCallbackUrl.Get(), o.DeauthorizeCallbackUrl.IsSet()
}

// HasDeauthorizeCallbackUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasDeauthorizeCallbackUrl() bool {
	if o != nil && o.DeauthorizeCallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetDeauthorizeCallbackUrl gets a reference to the given NullableString and assigns it to the DeauthorizeCallbackUrl field.
func (o *ApiV2010AccountConnectApp) SetDeauthorizeCallbackUrl(v string) {
	o.DeauthorizeCallbackUrl.Set(&v)
}
// SetDeauthorizeCallbackUrlNil sets the value for DeauthorizeCallbackUrl to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetDeauthorizeCallbackUrlNil() {
	o.DeauthorizeCallbackUrl.Set(nil)
}

// UnsetDeauthorizeCallbackUrl ensures that no value is present for DeauthorizeCallbackUrl, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetDeauthorizeCallbackUrl() {
	o.DeauthorizeCallbackUrl.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ApiV2010AccountConnectApp) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetDescription() {
	o.Description.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetFriendlyName() string {
	if o == nil || o.FriendlyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *ApiV2010AccountConnectApp) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}
// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetHomepageUrl returns the HomepageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetHomepageUrl() string {
	if o == nil || o.HomepageUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.HomepageUrl.Get()
}

// GetHomepageUrlOk returns a tuple with the HomepageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetHomepageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomepageUrl.Get(), o.HomepageUrl.IsSet()
}

// HasHomepageUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasHomepageUrl() bool {
	if o != nil && o.HomepageUrl.IsSet() {
		return true
	}

	return false
}

// SetHomepageUrl gets a reference to the given NullableString and assigns it to the HomepageUrl field.
func (o *ApiV2010AccountConnectApp) SetHomepageUrl(v string) {
	o.HomepageUrl.Set(&v)
}
// SetHomepageUrlNil sets the value for HomepageUrl to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetHomepageUrlNil() {
	o.HomepageUrl.Set(nil)
}

// UnsetHomepageUrl ensures that no value is present for HomepageUrl, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetHomepageUrl() {
	o.HomepageUrl.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetPermissionsOk() ([]string, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *ApiV2010AccountConnectApp) SetPermissions(v []string) {
	o.Permissions = v
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountConnectApp) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetSid() {
	o.Sid.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountConnectApp) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountConnectApp) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountConnectApp) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountConnectApp) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountConnectApp) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountConnectApp) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountConnectApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.AuthorizeRedirectUrl.IsSet() {
		toSerialize["authorize_redirect_url"] = o.AuthorizeRedirectUrl.Get()
	}
	if o.CompanyName.IsSet() {
		toSerialize["company_name"] = o.CompanyName.Get()
	}
	if o.DeauthorizeCallbackMethod.IsSet() {
		toSerialize["deauthorize_callback_method"] = o.DeauthorizeCallbackMethod.Get()
	}
	if o.DeauthorizeCallbackUrl.IsSet() {
		toSerialize["deauthorize_callback_url"] = o.DeauthorizeCallbackUrl.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["friendly_name"] = o.FriendlyName.Get()
	}
	if o.HomepageUrl.IsSet() {
		toSerialize["homepage_url"] = o.HomepageUrl.Get()
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountConnectApp struct {
	value *ApiV2010AccountConnectApp
	isSet bool
}

func (v NullableApiV2010AccountConnectApp) Get() *ApiV2010AccountConnectApp {
	return v.value
}

func (v *NullableApiV2010AccountConnectApp) Set(val *ApiV2010AccountConnectApp) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountConnectApp) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountConnectApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountConnectApp(val *ApiV2010AccountConnectApp) *NullableApiV2010AccountConnectApp {
	return &NullableApiV2010AccountConnectApp{value: val, isSet: true}
}

func (v NullableApiV2010AccountConnectApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountConnectApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


