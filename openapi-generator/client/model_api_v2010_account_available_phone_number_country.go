/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountAvailablePhoneNumberCountry struct for ApiV2010AccountAvailablePhoneNumberCountry
type ApiV2010AccountAvailablePhoneNumberCountry struct {
	// Whether all phone numbers available in the country are new to the Twilio platform.
	Beta NullableBool `json:"beta,omitempty"`
	// The name of the country
	Country NullableString `json:"country,omitempty"`
	// The ISO-3166-1 country code of the country.
	CountryCode NullableString `json:"country_code,omitempty"`
	// A list of related resources identified by their relative URIs
	SubresourceUris map[string]interface{} `json:"subresource_uris,omitempty"`
	// The URI of the Country resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountAvailablePhoneNumberCountry instantiates a new ApiV2010AccountAvailablePhoneNumberCountry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountAvailablePhoneNumberCountry() *ApiV2010AccountAvailablePhoneNumberCountry {
	this := ApiV2010AccountAvailablePhoneNumberCountry{}
	return &this
}

// NewApiV2010AccountAvailablePhoneNumberCountryWithDefaults instantiates a new ApiV2010AccountAvailablePhoneNumberCountry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountAvailablePhoneNumberCountryWithDefaults() *ApiV2010AccountAvailablePhoneNumberCountry {
	this := ApiV2010AccountAvailablePhoneNumberCountry{}
	return &this
}

// GetBeta returns the Beta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetBeta() bool {
	if o == nil || o.Beta.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Beta.Get()
}

// GetBetaOk returns a tuple with the Beta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetBetaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Beta.Get(), o.Beta.IsSet()
}

// HasBeta returns a boolean if a field has been set.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) HasBeta() bool {
	if o != nil && o.Beta.IsSet() {
		return true
	}

	return false
}

// SetBeta gets a reference to the given NullableBool and assigns it to the Beta field.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetBeta(v bool) {
	o.Beta.Set(&v)
}
// SetBetaNil sets the value for Beta to be an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetBetaNil() {
	o.Beta.Set(nil)
}

// UnsetBeta ensures that no value is present for Beta, not even an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) UnsetBeta() {
	o.Beta.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) UnsetCountry() {
	o.Country.Unset()
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetCountryCode() string {
	if o == nil || o.CountryCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CountryCode.Get()
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCode.Get(), o.CountryCode.IsSet()
}

// HasCountryCode returns a boolean if a field has been set.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) HasCountryCode() bool {
	if o != nil && o.CountryCode.IsSet() {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given NullableString and assigns it to the CountryCode field.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetCountryCode(v string) {
	o.CountryCode.Set(&v)
}
// SetCountryCodeNil sets the value for CountryCode to be an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetCountryCodeNil() {
	o.CountryCode.Set(nil)
}

// UnsetCountryCode ensures that no value is present for CountryCode, not even an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) UnsetCountryCode() {
	o.CountryCode.Unset()
}

// GetSubresourceUris returns the SubresourceUris field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetSubresourceUris() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.SubresourceUris
}

// GetSubresourceUrisOk returns a tuple with the SubresourceUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetSubresourceUrisOk() (map[string]interface{}, bool) {
	if o == nil || o.SubresourceUris == nil {
		return nil, false
	}
	return o.SubresourceUris, true
}

// HasSubresourceUris returns a boolean if a field has been set.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) HasSubresourceUris() bool {
	if o != nil && o.SubresourceUris != nil {
		return true
	}

	return false
}

// SetSubresourceUris gets a reference to the given map[string]interface{} and assigns it to the SubresourceUris field.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetSubresourceUris(v map[string]interface{}) {
	o.SubresourceUris = v
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountAvailablePhoneNumberCountry) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountAvailablePhoneNumberCountry) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountAvailablePhoneNumberCountry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Beta.IsSet() {
		toSerialize["beta"] = o.Beta.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.CountryCode.IsSet() {
		toSerialize["country_code"] = o.CountryCode.Get()
	}
	if o.SubresourceUris != nil {
		toSerialize["subresource_uris"] = o.SubresourceUris
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountAvailablePhoneNumberCountry struct {
	value *ApiV2010AccountAvailablePhoneNumberCountry
	isSet bool
}

func (v NullableApiV2010AccountAvailablePhoneNumberCountry) Get() *ApiV2010AccountAvailablePhoneNumberCountry {
	return v.value
}

func (v *NullableApiV2010AccountAvailablePhoneNumberCountry) Set(val *ApiV2010AccountAvailablePhoneNumberCountry) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountAvailablePhoneNumberCountry) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountAvailablePhoneNumberCountry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountAvailablePhoneNumberCountry(val *ApiV2010AccountAvailablePhoneNumberCountry) *NullableApiV2010AccountAvailablePhoneNumberCountry {
	return &NullableApiV2010AccountAvailablePhoneNumberCountry{value: val, isSet: true}
}

func (v NullableApiV2010AccountAvailablePhoneNumberCountry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountAvailablePhoneNumberCountry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


