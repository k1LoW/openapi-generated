/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountApplication struct for ApiV2010AccountApplication
type ApiV2010AccountApplication struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The API version used to start a new TwiML session
	ApiVersion NullableString `json:"api_version,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// The string that you assigned to describe the resource
	FriendlyName NullableString `json:"friendly_name,omitempty"`
	// The URL to send message status information to your application
	MessageStatusCallback NullableString `json:"message_status_callback,omitempty"`
	// The unique string that identifies the resource
	Sid NullableString `json:"sid,omitempty"`
	// The HTTP method used with sms_fallback_url
	SmsFallbackMethod NullableString `json:"sms_fallback_method,omitempty"`
	// The URL that we call when an error occurs while retrieving or executing the TwiML
	SmsFallbackUrl NullableString `json:"sms_fallback_url,omitempty"`
	// The HTTP method to use with sms_url
	SmsMethod NullableString `json:"sms_method,omitempty"`
	// The URL to send status information to your application
	SmsStatusCallback NullableString `json:"sms_status_callback,omitempty"`
	// The URL we call when the phone number receives an incoming SMS message
	SmsUrl NullableString `json:"sms_url,omitempty"`
	// The URL to send status information to your application
	StatusCallback NullableString `json:"status_callback,omitempty"`
	// The HTTP method we use to call status_callback
	StatusCallbackMethod NullableString `json:"status_callback_method,omitempty"`
	// The URI of the resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
	// Whether to lookup the caller's name
	VoiceCallerIdLookup NullableBool `json:"voice_caller_id_lookup,omitempty"`
	// The HTTP method used with voice_fallback_url
	VoiceFallbackMethod NullableString `json:"voice_fallback_method,omitempty"`
	// The URL we call when a TwiML error occurs
	VoiceFallbackUrl NullableString `json:"voice_fallback_url,omitempty"`
	// The HTTP method used with the voice_url
	VoiceMethod NullableString `json:"voice_method,omitempty"`
	// The URL we call when the phone number receives a call
	VoiceUrl NullableString `json:"voice_url,omitempty"`
}

// NewApiV2010AccountApplication instantiates a new ApiV2010AccountApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountApplication() *ApiV2010AccountApplication {
	this := ApiV2010AccountApplication{}
	return &this
}

// NewApiV2010AccountApplicationWithDefaults instantiates a new ApiV2010AccountApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountApplicationWithDefaults() *ApiV2010AccountApplication {
	this := ApiV2010AccountApplication{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountApplication) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountApplication) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetApiVersion() string {
	if o == nil || o.ApiVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion.Get()
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiVersion.Get(), o.ApiVersion.IsSet()
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasApiVersion() bool {
	if o != nil && o.ApiVersion.IsSet() {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given NullableString and assigns it to the ApiVersion field.
func (o *ApiV2010AccountApplication) SetApiVersion(v string) {
	o.ApiVersion.Set(&v)
}
// SetApiVersionNil sets the value for ApiVersion to be an explicit nil
func (o *ApiV2010AccountApplication) SetApiVersionNil() {
	o.ApiVersion.Set(nil)
}

// UnsetApiVersion ensures that no value is present for ApiVersion, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetApiVersion() {
	o.ApiVersion.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountApplication) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountApplication) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountApplication) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountApplication) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetFriendlyName() string {
	if o == nil || o.FriendlyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *ApiV2010AccountApplication) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}
// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *ApiV2010AccountApplication) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetMessageStatusCallback returns the MessageStatusCallback field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetMessageStatusCallback() string {
	if o == nil || o.MessageStatusCallback.Get() == nil {
		var ret string
		return ret
	}
	return *o.MessageStatusCallback.Get()
}

// GetMessageStatusCallbackOk returns a tuple with the MessageStatusCallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetMessageStatusCallbackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageStatusCallback.Get(), o.MessageStatusCallback.IsSet()
}

// HasMessageStatusCallback returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasMessageStatusCallback() bool {
	if o != nil && o.MessageStatusCallback.IsSet() {
		return true
	}

	return false
}

// SetMessageStatusCallback gets a reference to the given NullableString and assigns it to the MessageStatusCallback field.
func (o *ApiV2010AccountApplication) SetMessageStatusCallback(v string) {
	o.MessageStatusCallback.Set(&v)
}
// SetMessageStatusCallbackNil sets the value for MessageStatusCallback to be an explicit nil
func (o *ApiV2010AccountApplication) SetMessageStatusCallbackNil() {
	o.MessageStatusCallback.Set(nil)
}

// UnsetMessageStatusCallback ensures that no value is present for MessageStatusCallback, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetMessageStatusCallback() {
	o.MessageStatusCallback.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountApplication) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountApplication) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetSid() {
	o.Sid.Unset()
}

// GetSmsFallbackMethod returns the SmsFallbackMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetSmsFallbackMethod() string {
	if o == nil || o.SmsFallbackMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.SmsFallbackMethod.Get()
}

// GetSmsFallbackMethodOk returns a tuple with the SmsFallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetSmsFallbackMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmsFallbackMethod.Get(), o.SmsFallbackMethod.IsSet()
}

// HasSmsFallbackMethod returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasSmsFallbackMethod() bool {
	if o != nil && o.SmsFallbackMethod.IsSet() {
		return true
	}

	return false
}

// SetSmsFallbackMethod gets a reference to the given NullableString and assigns it to the SmsFallbackMethod field.
func (o *ApiV2010AccountApplication) SetSmsFallbackMethod(v string) {
	o.SmsFallbackMethod.Set(&v)
}
// SetSmsFallbackMethodNil sets the value for SmsFallbackMethod to be an explicit nil
func (o *ApiV2010AccountApplication) SetSmsFallbackMethodNil() {
	o.SmsFallbackMethod.Set(nil)
}

// UnsetSmsFallbackMethod ensures that no value is present for SmsFallbackMethod, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetSmsFallbackMethod() {
	o.SmsFallbackMethod.Unset()
}

// GetSmsFallbackUrl returns the SmsFallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetSmsFallbackUrl() string {
	if o == nil || o.SmsFallbackUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.SmsFallbackUrl.Get()
}

// GetSmsFallbackUrlOk returns a tuple with the SmsFallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetSmsFallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmsFallbackUrl.Get(), o.SmsFallbackUrl.IsSet()
}

// HasSmsFallbackUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasSmsFallbackUrl() bool {
	if o != nil && o.SmsFallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetSmsFallbackUrl gets a reference to the given NullableString and assigns it to the SmsFallbackUrl field.
func (o *ApiV2010AccountApplication) SetSmsFallbackUrl(v string) {
	o.SmsFallbackUrl.Set(&v)
}
// SetSmsFallbackUrlNil sets the value for SmsFallbackUrl to be an explicit nil
func (o *ApiV2010AccountApplication) SetSmsFallbackUrlNil() {
	o.SmsFallbackUrl.Set(nil)
}

// UnsetSmsFallbackUrl ensures that no value is present for SmsFallbackUrl, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetSmsFallbackUrl() {
	o.SmsFallbackUrl.Unset()
}

// GetSmsMethod returns the SmsMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetSmsMethod() string {
	if o == nil || o.SmsMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.SmsMethod.Get()
}

// GetSmsMethodOk returns a tuple with the SmsMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetSmsMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmsMethod.Get(), o.SmsMethod.IsSet()
}

// HasSmsMethod returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasSmsMethod() bool {
	if o != nil && o.SmsMethod.IsSet() {
		return true
	}

	return false
}

// SetSmsMethod gets a reference to the given NullableString and assigns it to the SmsMethod field.
func (o *ApiV2010AccountApplication) SetSmsMethod(v string) {
	o.SmsMethod.Set(&v)
}
// SetSmsMethodNil sets the value for SmsMethod to be an explicit nil
func (o *ApiV2010AccountApplication) SetSmsMethodNil() {
	o.SmsMethod.Set(nil)
}

// UnsetSmsMethod ensures that no value is present for SmsMethod, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetSmsMethod() {
	o.SmsMethod.Unset()
}

// GetSmsStatusCallback returns the SmsStatusCallback field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetSmsStatusCallback() string {
	if o == nil || o.SmsStatusCallback.Get() == nil {
		var ret string
		return ret
	}
	return *o.SmsStatusCallback.Get()
}

// GetSmsStatusCallbackOk returns a tuple with the SmsStatusCallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetSmsStatusCallbackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmsStatusCallback.Get(), o.SmsStatusCallback.IsSet()
}

// HasSmsStatusCallback returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasSmsStatusCallback() bool {
	if o != nil && o.SmsStatusCallback.IsSet() {
		return true
	}

	return false
}

// SetSmsStatusCallback gets a reference to the given NullableString and assigns it to the SmsStatusCallback field.
func (o *ApiV2010AccountApplication) SetSmsStatusCallback(v string) {
	o.SmsStatusCallback.Set(&v)
}
// SetSmsStatusCallbackNil sets the value for SmsStatusCallback to be an explicit nil
func (o *ApiV2010AccountApplication) SetSmsStatusCallbackNil() {
	o.SmsStatusCallback.Set(nil)
}

// UnsetSmsStatusCallback ensures that no value is present for SmsStatusCallback, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetSmsStatusCallback() {
	o.SmsStatusCallback.Unset()
}

// GetSmsUrl returns the SmsUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetSmsUrl() string {
	if o == nil || o.SmsUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.SmsUrl.Get()
}

// GetSmsUrlOk returns a tuple with the SmsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetSmsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmsUrl.Get(), o.SmsUrl.IsSet()
}

// HasSmsUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasSmsUrl() bool {
	if o != nil && o.SmsUrl.IsSet() {
		return true
	}

	return false
}

// SetSmsUrl gets a reference to the given NullableString and assigns it to the SmsUrl field.
func (o *ApiV2010AccountApplication) SetSmsUrl(v string) {
	o.SmsUrl.Set(&v)
}
// SetSmsUrlNil sets the value for SmsUrl to be an explicit nil
func (o *ApiV2010AccountApplication) SetSmsUrlNil() {
	o.SmsUrl.Set(nil)
}

// UnsetSmsUrl ensures that no value is present for SmsUrl, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetSmsUrl() {
	o.SmsUrl.Unset()
}

// GetStatusCallback returns the StatusCallback field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetStatusCallback() string {
	if o == nil || o.StatusCallback.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusCallback.Get()
}

// GetStatusCallbackOk returns a tuple with the StatusCallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetStatusCallbackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusCallback.Get(), o.StatusCallback.IsSet()
}

// HasStatusCallback returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasStatusCallback() bool {
	if o != nil && o.StatusCallback.IsSet() {
		return true
	}

	return false
}

// SetStatusCallback gets a reference to the given NullableString and assigns it to the StatusCallback field.
func (o *ApiV2010AccountApplication) SetStatusCallback(v string) {
	o.StatusCallback.Set(&v)
}
// SetStatusCallbackNil sets the value for StatusCallback to be an explicit nil
func (o *ApiV2010AccountApplication) SetStatusCallbackNil() {
	o.StatusCallback.Set(nil)
}

// UnsetStatusCallback ensures that no value is present for StatusCallback, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetStatusCallback() {
	o.StatusCallback.Unset()
}

// GetStatusCallbackMethod returns the StatusCallbackMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetStatusCallbackMethod() string {
	if o == nil || o.StatusCallbackMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusCallbackMethod.Get()
}

// GetStatusCallbackMethodOk returns a tuple with the StatusCallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetStatusCallbackMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusCallbackMethod.Get(), o.StatusCallbackMethod.IsSet()
}

// HasStatusCallbackMethod returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasStatusCallbackMethod() bool {
	if o != nil && o.StatusCallbackMethod.IsSet() {
		return true
	}

	return false
}

// SetStatusCallbackMethod gets a reference to the given NullableString and assigns it to the StatusCallbackMethod field.
func (o *ApiV2010AccountApplication) SetStatusCallbackMethod(v string) {
	o.StatusCallbackMethod.Set(&v)
}
// SetStatusCallbackMethodNil sets the value for StatusCallbackMethod to be an explicit nil
func (o *ApiV2010AccountApplication) SetStatusCallbackMethodNil() {
	o.StatusCallbackMethod.Set(nil)
}

// UnsetStatusCallbackMethod ensures that no value is present for StatusCallbackMethod, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetStatusCallbackMethod() {
	o.StatusCallbackMethod.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountApplication) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountApplication) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetUri() {
	o.Uri.Unset()
}

// GetVoiceCallerIdLookup returns the VoiceCallerIdLookup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetVoiceCallerIdLookup() bool {
	if o == nil || o.VoiceCallerIdLookup.Get() == nil {
		var ret bool
		return ret
	}
	return *o.VoiceCallerIdLookup.Get()
}

// GetVoiceCallerIdLookupOk returns a tuple with the VoiceCallerIdLookup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetVoiceCallerIdLookupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoiceCallerIdLookup.Get(), o.VoiceCallerIdLookup.IsSet()
}

// HasVoiceCallerIdLookup returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasVoiceCallerIdLookup() bool {
	if o != nil && o.VoiceCallerIdLookup.IsSet() {
		return true
	}

	return false
}

// SetVoiceCallerIdLookup gets a reference to the given NullableBool and assigns it to the VoiceCallerIdLookup field.
func (o *ApiV2010AccountApplication) SetVoiceCallerIdLookup(v bool) {
	o.VoiceCallerIdLookup.Set(&v)
}
// SetVoiceCallerIdLookupNil sets the value for VoiceCallerIdLookup to be an explicit nil
func (o *ApiV2010AccountApplication) SetVoiceCallerIdLookupNil() {
	o.VoiceCallerIdLookup.Set(nil)
}

// UnsetVoiceCallerIdLookup ensures that no value is present for VoiceCallerIdLookup, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetVoiceCallerIdLookup() {
	o.VoiceCallerIdLookup.Unset()
}

// GetVoiceFallbackMethod returns the VoiceFallbackMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetVoiceFallbackMethod() string {
	if o == nil || o.VoiceFallbackMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.VoiceFallbackMethod.Get()
}

// GetVoiceFallbackMethodOk returns a tuple with the VoiceFallbackMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetVoiceFallbackMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoiceFallbackMethod.Get(), o.VoiceFallbackMethod.IsSet()
}

// HasVoiceFallbackMethod returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasVoiceFallbackMethod() bool {
	if o != nil && o.VoiceFallbackMethod.IsSet() {
		return true
	}

	return false
}

// SetVoiceFallbackMethod gets a reference to the given NullableString and assigns it to the VoiceFallbackMethod field.
func (o *ApiV2010AccountApplication) SetVoiceFallbackMethod(v string) {
	o.VoiceFallbackMethod.Set(&v)
}
// SetVoiceFallbackMethodNil sets the value for VoiceFallbackMethod to be an explicit nil
func (o *ApiV2010AccountApplication) SetVoiceFallbackMethodNil() {
	o.VoiceFallbackMethod.Set(nil)
}

// UnsetVoiceFallbackMethod ensures that no value is present for VoiceFallbackMethod, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetVoiceFallbackMethod() {
	o.VoiceFallbackMethod.Unset()
}

// GetVoiceFallbackUrl returns the VoiceFallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetVoiceFallbackUrl() string {
	if o == nil || o.VoiceFallbackUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.VoiceFallbackUrl.Get()
}

// GetVoiceFallbackUrlOk returns a tuple with the VoiceFallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetVoiceFallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoiceFallbackUrl.Get(), o.VoiceFallbackUrl.IsSet()
}

// HasVoiceFallbackUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasVoiceFallbackUrl() bool {
	if o != nil && o.VoiceFallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetVoiceFallbackUrl gets a reference to the given NullableString and assigns it to the VoiceFallbackUrl field.
func (o *ApiV2010AccountApplication) SetVoiceFallbackUrl(v string) {
	o.VoiceFallbackUrl.Set(&v)
}
// SetVoiceFallbackUrlNil sets the value for VoiceFallbackUrl to be an explicit nil
func (o *ApiV2010AccountApplication) SetVoiceFallbackUrlNil() {
	o.VoiceFallbackUrl.Set(nil)
}

// UnsetVoiceFallbackUrl ensures that no value is present for VoiceFallbackUrl, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetVoiceFallbackUrl() {
	o.VoiceFallbackUrl.Unset()
}

// GetVoiceMethod returns the VoiceMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetVoiceMethod() string {
	if o == nil || o.VoiceMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.VoiceMethod.Get()
}

// GetVoiceMethodOk returns a tuple with the VoiceMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetVoiceMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoiceMethod.Get(), o.VoiceMethod.IsSet()
}

// HasVoiceMethod returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasVoiceMethod() bool {
	if o != nil && o.VoiceMethod.IsSet() {
		return true
	}

	return false
}

// SetVoiceMethod gets a reference to the given NullableString and assigns it to the VoiceMethod field.
func (o *ApiV2010AccountApplication) SetVoiceMethod(v string) {
	o.VoiceMethod.Set(&v)
}
// SetVoiceMethodNil sets the value for VoiceMethod to be an explicit nil
func (o *ApiV2010AccountApplication) SetVoiceMethodNil() {
	o.VoiceMethod.Set(nil)
}

// UnsetVoiceMethod ensures that no value is present for VoiceMethod, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetVoiceMethod() {
	o.VoiceMethod.Unset()
}

// GetVoiceUrl returns the VoiceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountApplication) GetVoiceUrl() string {
	if o == nil || o.VoiceUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.VoiceUrl.Get()
}

// GetVoiceUrlOk returns a tuple with the VoiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountApplication) GetVoiceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoiceUrl.Get(), o.VoiceUrl.IsSet()
}

// HasVoiceUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountApplication) HasVoiceUrl() bool {
	if o != nil && o.VoiceUrl.IsSet() {
		return true
	}

	return false
}

// SetVoiceUrl gets a reference to the given NullableString and assigns it to the VoiceUrl field.
func (o *ApiV2010AccountApplication) SetVoiceUrl(v string) {
	o.VoiceUrl.Set(&v)
}
// SetVoiceUrlNil sets the value for VoiceUrl to be an explicit nil
func (o *ApiV2010AccountApplication) SetVoiceUrlNil() {
	o.VoiceUrl.Set(nil)
}

// UnsetVoiceUrl ensures that no value is present for VoiceUrl, not even an explicit nil
func (o *ApiV2010AccountApplication) UnsetVoiceUrl() {
	o.VoiceUrl.Unset()
}

func (o ApiV2010AccountApplication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.ApiVersion.IsSet() {
		toSerialize["api_version"] = o.ApiVersion.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["friendly_name"] = o.FriendlyName.Get()
	}
	if o.MessageStatusCallback.IsSet() {
		toSerialize["message_status_callback"] = o.MessageStatusCallback.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.SmsFallbackMethod.IsSet() {
		toSerialize["sms_fallback_method"] = o.SmsFallbackMethod.Get()
	}
	if o.SmsFallbackUrl.IsSet() {
		toSerialize["sms_fallback_url"] = o.SmsFallbackUrl.Get()
	}
	if o.SmsMethod.IsSet() {
		toSerialize["sms_method"] = o.SmsMethod.Get()
	}
	if o.SmsStatusCallback.IsSet() {
		toSerialize["sms_status_callback"] = o.SmsStatusCallback.Get()
	}
	if o.SmsUrl.IsSet() {
		toSerialize["sms_url"] = o.SmsUrl.Get()
	}
	if o.StatusCallback.IsSet() {
		toSerialize["status_callback"] = o.StatusCallback.Get()
	}
	if o.StatusCallbackMethod.IsSet() {
		toSerialize["status_callback_method"] = o.StatusCallbackMethod.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	if o.VoiceCallerIdLookup.IsSet() {
		toSerialize["voice_caller_id_lookup"] = o.VoiceCallerIdLookup.Get()
	}
	if o.VoiceFallbackMethod.IsSet() {
		toSerialize["voice_fallback_method"] = o.VoiceFallbackMethod.Get()
	}
	if o.VoiceFallbackUrl.IsSet() {
		toSerialize["voice_fallback_url"] = o.VoiceFallbackUrl.Get()
	}
	if o.VoiceMethod.IsSet() {
		toSerialize["voice_method"] = o.VoiceMethod.Get()
	}
	if o.VoiceUrl.IsSet() {
		toSerialize["voice_url"] = o.VoiceUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountApplication struct {
	value *ApiV2010AccountApplication
	isSet bool
}

func (v NullableApiV2010AccountApplication) Get() *ApiV2010AccountApplication {
	return v.value
}

func (v *NullableApiV2010AccountApplication) Set(val *ApiV2010AccountApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountApplication(val *ApiV2010AccountApplication) *NullableApiV2010AccountApplication {
	return &NullableApiV2010AccountApplication{value: val, isSet: true}
}

func (v NullableApiV2010AccountApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


