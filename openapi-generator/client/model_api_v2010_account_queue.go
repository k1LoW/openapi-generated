/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountQueue struct for ApiV2010AccountQueue
type ApiV2010AccountQueue struct {
	// The SID of the Account that created this resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// Average wait time of members in the queue
	AverageWaitTime NullableInt32 `json:"average_wait_time,omitempty"`
	// The number of calls currently in the queue.
	CurrentSize NullableInt32 `json:"current_size,omitempty"`
	// The RFC 2822 date and time in GMT that this resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that this resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// A string that you assigned to describe this resource
	FriendlyName NullableString `json:"friendly_name,omitempty"`
	// The max number of calls allowed in the queue
	MaxSize NullableInt32 `json:"max_size,omitempty"`
	// The unique string that identifies this resource
	Sid NullableString `json:"sid,omitempty"`
	// The URI of this resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountQueue instantiates a new ApiV2010AccountQueue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountQueue() *ApiV2010AccountQueue {
	this := ApiV2010AccountQueue{}
	return &this
}

// NewApiV2010AccountQueueWithDefaults instantiates a new ApiV2010AccountQueue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountQueueWithDefaults() *ApiV2010AccountQueue {
	this := ApiV2010AccountQueue{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountQueue) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountQueue) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetAverageWaitTime returns the AverageWaitTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetAverageWaitTime() int32 {
	if o == nil || o.AverageWaitTime.Get() == nil {
		var ret int32
		return ret
	}
	return *o.AverageWaitTime.Get()
}

// GetAverageWaitTimeOk returns a tuple with the AverageWaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetAverageWaitTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AverageWaitTime.Get(), o.AverageWaitTime.IsSet()
}

// HasAverageWaitTime returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasAverageWaitTime() bool {
	if o != nil && o.AverageWaitTime.IsSet() {
		return true
	}

	return false
}

// SetAverageWaitTime gets a reference to the given NullableInt32 and assigns it to the AverageWaitTime field.
func (o *ApiV2010AccountQueue) SetAverageWaitTime(v int32) {
	o.AverageWaitTime.Set(&v)
}
// SetAverageWaitTimeNil sets the value for AverageWaitTime to be an explicit nil
func (o *ApiV2010AccountQueue) SetAverageWaitTimeNil() {
	o.AverageWaitTime.Set(nil)
}

// UnsetAverageWaitTime ensures that no value is present for AverageWaitTime, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetAverageWaitTime() {
	o.AverageWaitTime.Unset()
}

// GetCurrentSize returns the CurrentSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetCurrentSize() int32 {
	if o == nil || o.CurrentSize.Get() == nil {
		var ret int32
		return ret
	}
	return *o.CurrentSize.Get()
}

// GetCurrentSizeOk returns a tuple with the CurrentSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetCurrentSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentSize.Get(), o.CurrentSize.IsSet()
}

// HasCurrentSize returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasCurrentSize() bool {
	if o != nil && o.CurrentSize.IsSet() {
		return true
	}

	return false
}

// SetCurrentSize gets a reference to the given NullableInt32 and assigns it to the CurrentSize field.
func (o *ApiV2010AccountQueue) SetCurrentSize(v int32) {
	o.CurrentSize.Set(&v)
}
// SetCurrentSizeNil sets the value for CurrentSize to be an explicit nil
func (o *ApiV2010AccountQueue) SetCurrentSizeNil() {
	o.CurrentSize.Set(nil)
}

// UnsetCurrentSize ensures that no value is present for CurrentSize, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetCurrentSize() {
	o.CurrentSize.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountQueue) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountQueue) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountQueue) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountQueue) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetFriendlyName() string {
	if o == nil || o.FriendlyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *ApiV2010AccountQueue) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}
// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *ApiV2010AccountQueue) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetMaxSize() int32 {
	if o == nil || o.MaxSize.Get() == nil {
		var ret int32
		return ret
	}
	return *o.MaxSize.Get()
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetMaxSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSize.Get(), o.MaxSize.IsSet()
}

// HasMaxSize returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasMaxSize() bool {
	if o != nil && o.MaxSize.IsSet() {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given NullableInt32 and assigns it to the MaxSize field.
func (o *ApiV2010AccountQueue) SetMaxSize(v int32) {
	o.MaxSize.Set(&v)
}
// SetMaxSizeNil sets the value for MaxSize to be an explicit nil
func (o *ApiV2010AccountQueue) SetMaxSizeNil() {
	o.MaxSize.Set(nil)
}

// UnsetMaxSize ensures that no value is present for MaxSize, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetMaxSize() {
	o.MaxSize.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountQueue) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountQueue) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetSid() {
	o.Sid.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountQueue) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountQueue) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountQueue) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountQueue) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountQueue) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountQueue) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountQueue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.AverageWaitTime.IsSet() {
		toSerialize["average_wait_time"] = o.AverageWaitTime.Get()
	}
	if o.CurrentSize.IsSet() {
		toSerialize["current_size"] = o.CurrentSize.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["friendly_name"] = o.FriendlyName.Get()
	}
	if o.MaxSize.IsSet() {
		toSerialize["max_size"] = o.MaxSize.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountQueue struct {
	value *ApiV2010AccountQueue
	isSet bool
}

func (v NullableApiV2010AccountQueue) Get() *ApiV2010AccountQueue {
	return v.value
}

func (v *NullableApiV2010AccountQueue) Set(val *ApiV2010AccountQueue) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountQueue) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountQueue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountQueue(val *ApiV2010AccountQueue) *NullableApiV2010AccountQueue {
	return &NullableApiV2010AccountQueue{value: val, isSet: true}
}

func (v NullableApiV2010AccountQueue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountQueue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


