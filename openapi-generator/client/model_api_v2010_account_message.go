/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountMessage struct for ApiV2010AccountMessage
type ApiV2010AccountMessage struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The API version used to process the message
	ApiVersion NullableString `json:"api_version,omitempty"`
	// The message text
	Body NullableString `json:"body,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT when the message was sent
	DateSent NullableString `json:"date_sent,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// The direction of the message
	Direction NullableString `json:"direction,omitempty"`
	// The error code associated with the message
	ErrorCode NullableInt32 `json:"error_code,omitempty"`
	// The description of the error_code
	ErrorMessage NullableString `json:"error_message,omitempty"`
	// The phone number that initiated the message
	From NullableString `json:"from,omitempty"`
	// The SID of the Messaging Service used with the message.
	MessagingServiceSid NullableString `json:"messaging_service_sid,omitempty"`
	// The number of media files associated with the message
	NumMedia NullableString `json:"num_media,omitempty"`
	// The number of messages used to deliver the message body
	NumSegments NullableString `json:"num_segments,omitempty"`
	// The amount billed for the message
	Price NullableString `json:"price,omitempty"`
	// The currency in which price is measured
	PriceUnit NullableString `json:"price_unit,omitempty"`
	// The unique string that identifies the resource
	Sid NullableString `json:"sid,omitempty"`
	// The status of the message
	Status NullableString `json:"status,omitempty"`
	// A list of related resources identified by their relative URIs
	SubresourceUris map[string]interface{} `json:"subresource_uris,omitempty"`
	// The phone number that received the message
	To NullableString `json:"to,omitempty"`
	// The URI of the resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountMessage instantiates a new ApiV2010AccountMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountMessage() *ApiV2010AccountMessage {
	this := ApiV2010AccountMessage{}
	return &this
}

// NewApiV2010AccountMessageWithDefaults instantiates a new ApiV2010AccountMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountMessageWithDefaults() *ApiV2010AccountMessage {
	this := ApiV2010AccountMessage{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountMessage) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountMessage) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetApiVersion() string {
	if o == nil || o.ApiVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion.Get()
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiVersion.Get(), o.ApiVersion.IsSet()
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasApiVersion() bool {
	if o != nil && o.ApiVersion.IsSet() {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given NullableString and assigns it to the ApiVersion field.
func (o *ApiV2010AccountMessage) SetApiVersion(v string) {
	o.ApiVersion.Set(&v)
}
// SetApiVersionNil sets the value for ApiVersion to be an explicit nil
func (o *ApiV2010AccountMessage) SetApiVersionNil() {
	o.ApiVersion.Set(nil)
}

// UnsetApiVersion ensures that no value is present for ApiVersion, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetApiVersion() {
	o.ApiVersion.Unset()
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetBody() string {
	if o == nil || o.Body.Get() == nil {
		var ret string
		return ret
	}
	return *o.Body.Get()
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Body.Get(), o.Body.IsSet()
}

// HasBody returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasBody() bool {
	if o != nil && o.Body.IsSet() {
		return true
	}

	return false
}

// SetBody gets a reference to the given NullableString and assigns it to the Body field.
func (o *ApiV2010AccountMessage) SetBody(v string) {
	o.Body.Set(&v)
}
// SetBodyNil sets the value for Body to be an explicit nil
func (o *ApiV2010AccountMessage) SetBodyNil() {
	o.Body.Set(nil)
}

// UnsetBody ensures that no value is present for Body, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetBody() {
	o.Body.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountMessage) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountMessage) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateSent returns the DateSent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetDateSent() string {
	if o == nil || o.DateSent.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateSent.Get()
}

// GetDateSentOk returns a tuple with the DateSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetDateSentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateSent.Get(), o.DateSent.IsSet()
}

// HasDateSent returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasDateSent() bool {
	if o != nil && o.DateSent.IsSet() {
		return true
	}

	return false
}

// SetDateSent gets a reference to the given NullableString and assigns it to the DateSent field.
func (o *ApiV2010AccountMessage) SetDateSent(v string) {
	o.DateSent.Set(&v)
}
// SetDateSentNil sets the value for DateSent to be an explicit nil
func (o *ApiV2010AccountMessage) SetDateSentNil() {
	o.DateSent.Set(nil)
}

// UnsetDateSent ensures that no value is present for DateSent, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetDateSent() {
	o.DateSent.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountMessage) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountMessage) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetDirection returns the Direction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetDirection() string {
	if o == nil || o.Direction.Get() == nil {
		var ret string
		return ret
	}
	return *o.Direction.Get()
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Direction.Get(), o.Direction.IsSet()
}

// HasDirection returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasDirection() bool {
	if o != nil && o.Direction.IsSet() {
		return true
	}

	return false
}

// SetDirection gets a reference to the given NullableString and assigns it to the Direction field.
func (o *ApiV2010AccountMessage) SetDirection(v string) {
	o.Direction.Set(&v)
}
// SetDirectionNil sets the value for Direction to be an explicit nil
func (o *ApiV2010AccountMessage) SetDirectionNil() {
	o.Direction.Set(nil)
}

// UnsetDirection ensures that no value is present for Direction, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetDirection() {
	o.Direction.Unset()
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetErrorCode() int32 {
	if o == nil || o.ErrorCode.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ErrorCode.Get()
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetErrorCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorCode.Get(), o.ErrorCode.IsSet()
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasErrorCode() bool {
	if o != nil && o.ErrorCode.IsSet() {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given NullableInt32 and assigns it to the ErrorCode field.
func (o *ApiV2010AccountMessage) SetErrorCode(v int32) {
	o.ErrorCode.Set(&v)
}
// SetErrorCodeNil sets the value for ErrorCode to be an explicit nil
func (o *ApiV2010AccountMessage) SetErrorCodeNil() {
	o.ErrorCode.Set(nil)
}

// UnsetErrorCode ensures that no value is present for ErrorCode, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetErrorCode() {
	o.ErrorCode.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *ApiV2010AccountMessage) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *ApiV2010AccountMessage) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetFrom() string {
	if o == nil || o.From.Get() == nil {
		var ret string
		return ret
	}
	return *o.From.Get()
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.From.Get(), o.From.IsSet()
}

// HasFrom returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasFrom() bool {
	if o != nil && o.From.IsSet() {
		return true
	}

	return false
}

// SetFrom gets a reference to the given NullableString and assigns it to the From field.
func (o *ApiV2010AccountMessage) SetFrom(v string) {
	o.From.Set(&v)
}
// SetFromNil sets the value for From to be an explicit nil
func (o *ApiV2010AccountMessage) SetFromNil() {
	o.From.Set(nil)
}

// UnsetFrom ensures that no value is present for From, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetFrom() {
	o.From.Unset()
}

// GetMessagingServiceSid returns the MessagingServiceSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetMessagingServiceSid() string {
	if o == nil || o.MessagingServiceSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.MessagingServiceSid.Get()
}

// GetMessagingServiceSidOk returns a tuple with the MessagingServiceSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetMessagingServiceSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessagingServiceSid.Get(), o.MessagingServiceSid.IsSet()
}

// HasMessagingServiceSid returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasMessagingServiceSid() bool {
	if o != nil && o.MessagingServiceSid.IsSet() {
		return true
	}

	return false
}

// SetMessagingServiceSid gets a reference to the given NullableString and assigns it to the MessagingServiceSid field.
func (o *ApiV2010AccountMessage) SetMessagingServiceSid(v string) {
	o.MessagingServiceSid.Set(&v)
}
// SetMessagingServiceSidNil sets the value for MessagingServiceSid to be an explicit nil
func (o *ApiV2010AccountMessage) SetMessagingServiceSidNil() {
	o.MessagingServiceSid.Set(nil)
}

// UnsetMessagingServiceSid ensures that no value is present for MessagingServiceSid, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetMessagingServiceSid() {
	o.MessagingServiceSid.Unset()
}

// GetNumMedia returns the NumMedia field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetNumMedia() string {
	if o == nil || o.NumMedia.Get() == nil {
		var ret string
		return ret
	}
	return *o.NumMedia.Get()
}

// GetNumMediaOk returns a tuple with the NumMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetNumMediaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumMedia.Get(), o.NumMedia.IsSet()
}

// HasNumMedia returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasNumMedia() bool {
	if o != nil && o.NumMedia.IsSet() {
		return true
	}

	return false
}

// SetNumMedia gets a reference to the given NullableString and assigns it to the NumMedia field.
func (o *ApiV2010AccountMessage) SetNumMedia(v string) {
	o.NumMedia.Set(&v)
}
// SetNumMediaNil sets the value for NumMedia to be an explicit nil
func (o *ApiV2010AccountMessage) SetNumMediaNil() {
	o.NumMedia.Set(nil)
}

// UnsetNumMedia ensures that no value is present for NumMedia, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetNumMedia() {
	o.NumMedia.Unset()
}

// GetNumSegments returns the NumSegments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetNumSegments() string {
	if o == nil || o.NumSegments.Get() == nil {
		var ret string
		return ret
	}
	return *o.NumSegments.Get()
}

// GetNumSegmentsOk returns a tuple with the NumSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetNumSegmentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumSegments.Get(), o.NumSegments.IsSet()
}

// HasNumSegments returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasNumSegments() bool {
	if o != nil && o.NumSegments.IsSet() {
		return true
	}

	return false
}

// SetNumSegments gets a reference to the given NullableString and assigns it to the NumSegments field.
func (o *ApiV2010AccountMessage) SetNumSegments(v string) {
	o.NumSegments.Set(&v)
}
// SetNumSegmentsNil sets the value for NumSegments to be an explicit nil
func (o *ApiV2010AccountMessage) SetNumSegmentsNil() {
	o.NumSegments.Set(nil)
}

// UnsetNumSegments ensures that no value is present for NumSegments, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetNumSegments() {
	o.NumSegments.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetPrice() string {
	if o == nil || o.Price.Get() == nil {
		var ret string
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableString and assigns it to the Price field.
func (o *ApiV2010AccountMessage) SetPrice(v string) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *ApiV2010AccountMessage) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetPrice() {
	o.Price.Unset()
}

// GetPriceUnit returns the PriceUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetPriceUnit() string {
	if o == nil || o.PriceUnit.Get() == nil {
		var ret string
		return ret
	}
	return *o.PriceUnit.Get()
}

// GetPriceUnitOk returns a tuple with the PriceUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetPriceUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceUnit.Get(), o.PriceUnit.IsSet()
}

// HasPriceUnit returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasPriceUnit() bool {
	if o != nil && o.PriceUnit.IsSet() {
		return true
	}

	return false
}

// SetPriceUnit gets a reference to the given NullableString and assigns it to the PriceUnit field.
func (o *ApiV2010AccountMessage) SetPriceUnit(v string) {
	o.PriceUnit.Set(&v)
}
// SetPriceUnitNil sets the value for PriceUnit to be an explicit nil
func (o *ApiV2010AccountMessage) SetPriceUnitNil() {
	o.PriceUnit.Set(nil)
}

// UnsetPriceUnit ensures that no value is present for PriceUnit, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetPriceUnit() {
	o.PriceUnit.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountMessage) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountMessage) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetSid() {
	o.Sid.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ApiV2010AccountMessage) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ApiV2010AccountMessage) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetStatus() {
	o.Status.Unset()
}

// GetSubresourceUris returns the SubresourceUris field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetSubresourceUris() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.SubresourceUris
}

// GetSubresourceUrisOk returns a tuple with the SubresourceUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetSubresourceUrisOk() (map[string]interface{}, bool) {
	if o == nil || o.SubresourceUris == nil {
		return nil, false
	}
	return o.SubresourceUris, true
}

// HasSubresourceUris returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasSubresourceUris() bool {
	if o != nil && o.SubresourceUris != nil {
		return true
	}

	return false
}

// SetSubresourceUris gets a reference to the given map[string]interface{} and assigns it to the SubresourceUris field.
func (o *ApiV2010AccountMessage) SetSubresourceUris(v map[string]interface{}) {
	o.SubresourceUris = v
}

// GetTo returns the To field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetTo() string {
	if o == nil || o.To.Get() == nil {
		var ret string
		return ret
	}
	return *o.To.Get()
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.To.Get(), o.To.IsSet()
}

// HasTo returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasTo() bool {
	if o != nil && o.To.IsSet() {
		return true
	}

	return false
}

// SetTo gets a reference to the given NullableString and assigns it to the To field.
func (o *ApiV2010AccountMessage) SetTo(v string) {
	o.To.Set(&v)
}
// SetToNil sets the value for To to be an explicit nil
func (o *ApiV2010AccountMessage) SetToNil() {
	o.To.Set(nil)
}

// UnsetTo ensures that no value is present for To, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetTo() {
	o.To.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountMessage) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountMessage) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountMessage) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountMessage) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountMessage) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountMessage) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.ApiVersion.IsSet() {
		toSerialize["api_version"] = o.ApiVersion.Get()
	}
	if o.Body.IsSet() {
		toSerialize["body"] = o.Body.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateSent.IsSet() {
		toSerialize["date_sent"] = o.DateSent.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.Direction.IsSet() {
		toSerialize["direction"] = o.Direction.Get()
	}
	if o.ErrorCode.IsSet() {
		toSerialize["error_code"] = o.ErrorCode.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["error_message"] = o.ErrorMessage.Get()
	}
	if o.From.IsSet() {
		toSerialize["from"] = o.From.Get()
	}
	if o.MessagingServiceSid.IsSet() {
		toSerialize["messaging_service_sid"] = o.MessagingServiceSid.Get()
	}
	if o.NumMedia.IsSet() {
		toSerialize["num_media"] = o.NumMedia.Get()
	}
	if o.NumSegments.IsSet() {
		toSerialize["num_segments"] = o.NumSegments.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.PriceUnit.IsSet() {
		toSerialize["price_unit"] = o.PriceUnit.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.SubresourceUris != nil {
		toSerialize["subresource_uris"] = o.SubresourceUris
	}
	if o.To.IsSet() {
		toSerialize["to"] = o.To.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountMessage struct {
	value *ApiV2010AccountMessage
	isSet bool
}

func (v NullableApiV2010AccountMessage) Get() *ApiV2010AccountMessage {
	return v.value
}

func (v *NullableApiV2010AccountMessage) Set(val *ApiV2010AccountMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountMessage(val *ApiV2010AccountMessage) *NullableApiV2010AccountMessage {
	return &NullableApiV2010AccountMessage{value: val, isSet: true}
}

func (v NullableApiV2010AccountMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


