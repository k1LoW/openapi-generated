/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountRecordingRecordingAddOnResult struct for ApiV2010AccountRecordingRecordingAddOnResult
type ApiV2010AccountRecordingRecordingAddOnResult struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The SID of the Add-on configuration
	AddOnConfigurationSid NullableString `json:"add_on_configuration_sid,omitempty"`
	// The SID of the Add-on to which the result belongs
	AddOnSid NullableString `json:"add_on_sid,omitempty"`
	// The date and time in GMT that the result was completed
	DateCompleted NullableString `json:"date_completed,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// The SID of the recording to which the AddOnResult resource belongs
	ReferenceSid NullableString `json:"reference_sid,omitempty"`
	// The unique string that identifies the resource
	Sid NullableString `json:"sid,omitempty"`
	// The status of the result
	Status NullableString `json:"status,omitempty"`
	// A list of related resources identified by their relative URIs
	SubresourceUris map[string]interface{} `json:"subresource_uris,omitempty"`
}

// NewApiV2010AccountRecordingRecordingAddOnResult instantiates a new ApiV2010AccountRecordingRecordingAddOnResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountRecordingRecordingAddOnResult() *ApiV2010AccountRecordingRecordingAddOnResult {
	this := ApiV2010AccountRecordingRecordingAddOnResult{}
	return &this
}

// NewApiV2010AccountRecordingRecordingAddOnResultWithDefaults instantiates a new ApiV2010AccountRecordingRecordingAddOnResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountRecordingRecordingAddOnResultWithDefaults() *ApiV2010AccountRecordingRecordingAddOnResult {
	this := ApiV2010AccountRecordingRecordingAddOnResult{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetAddOnConfigurationSid returns the AddOnConfigurationSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetAddOnConfigurationSid() string {
	if o == nil || o.AddOnConfigurationSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AddOnConfigurationSid.Get()
}

// GetAddOnConfigurationSidOk returns a tuple with the AddOnConfigurationSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetAddOnConfigurationSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddOnConfigurationSid.Get(), o.AddOnConfigurationSid.IsSet()
}

// HasAddOnConfigurationSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasAddOnConfigurationSid() bool {
	if o != nil && o.AddOnConfigurationSid.IsSet() {
		return true
	}

	return false
}

// SetAddOnConfigurationSid gets a reference to the given NullableString and assigns it to the AddOnConfigurationSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetAddOnConfigurationSid(v string) {
	o.AddOnConfigurationSid.Set(&v)
}
// SetAddOnConfigurationSidNil sets the value for AddOnConfigurationSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetAddOnConfigurationSidNil() {
	o.AddOnConfigurationSid.Set(nil)
}

// UnsetAddOnConfigurationSid ensures that no value is present for AddOnConfigurationSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetAddOnConfigurationSid() {
	o.AddOnConfigurationSid.Unset()
}

// GetAddOnSid returns the AddOnSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetAddOnSid() string {
	if o == nil || o.AddOnSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AddOnSid.Get()
}

// GetAddOnSidOk returns a tuple with the AddOnSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetAddOnSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddOnSid.Get(), o.AddOnSid.IsSet()
}

// HasAddOnSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasAddOnSid() bool {
	if o != nil && o.AddOnSid.IsSet() {
		return true
	}

	return false
}

// SetAddOnSid gets a reference to the given NullableString and assigns it to the AddOnSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetAddOnSid(v string) {
	o.AddOnSid.Set(&v)
}
// SetAddOnSidNil sets the value for AddOnSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetAddOnSidNil() {
	o.AddOnSid.Set(nil)
}

// UnsetAddOnSid ensures that no value is present for AddOnSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetAddOnSid() {
	o.AddOnSid.Unset()
}

// GetDateCompleted returns the DateCompleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetDateCompleted() string {
	if o == nil || o.DateCompleted.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCompleted.Get()
}

// GetDateCompletedOk returns a tuple with the DateCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetDateCompletedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCompleted.Get(), o.DateCompleted.IsSet()
}

// HasDateCompleted returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasDateCompleted() bool {
	if o != nil && o.DateCompleted.IsSet() {
		return true
	}

	return false
}

// SetDateCompleted gets a reference to the given NullableString and assigns it to the DateCompleted field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetDateCompleted(v string) {
	o.DateCompleted.Set(&v)
}
// SetDateCompletedNil sets the value for DateCompleted to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetDateCompletedNil() {
	o.DateCompleted.Set(nil)
}

// UnsetDateCompleted ensures that no value is present for DateCompleted, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetDateCompleted() {
	o.DateCompleted.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetReferenceSid returns the ReferenceSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetReferenceSid() string {
	if o == nil || o.ReferenceSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReferenceSid.Get()
}

// GetReferenceSidOk returns a tuple with the ReferenceSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetReferenceSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceSid.Get(), o.ReferenceSid.IsSet()
}

// HasReferenceSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasReferenceSid() bool {
	if o != nil && o.ReferenceSid.IsSet() {
		return true
	}

	return false
}

// SetReferenceSid gets a reference to the given NullableString and assigns it to the ReferenceSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetReferenceSid(v string) {
	o.ReferenceSid.Set(&v)
}
// SetReferenceSidNil sets the value for ReferenceSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetReferenceSidNil() {
	o.ReferenceSid.Set(nil)
}

// UnsetReferenceSid ensures that no value is present for ReferenceSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetReferenceSid() {
	o.ReferenceSid.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetSid() {
	o.Sid.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResult) UnsetStatus() {
	o.Status.Unset()
}

// GetSubresourceUris returns the SubresourceUris field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetSubresourceUris() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.SubresourceUris
}

// GetSubresourceUrisOk returns a tuple with the SubresourceUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResult) GetSubresourceUrisOk() (map[string]interface{}, bool) {
	if o == nil || o.SubresourceUris == nil {
		return nil, false
	}
	return o.SubresourceUris, true
}

// HasSubresourceUris returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) HasSubresourceUris() bool {
	if o != nil && o.SubresourceUris != nil {
		return true
	}

	return false
}

// SetSubresourceUris gets a reference to the given map[string]interface{} and assigns it to the SubresourceUris field.
func (o *ApiV2010AccountRecordingRecordingAddOnResult) SetSubresourceUris(v map[string]interface{}) {
	o.SubresourceUris = v
}

func (o ApiV2010AccountRecordingRecordingAddOnResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.AddOnConfigurationSid.IsSet() {
		toSerialize["add_on_configuration_sid"] = o.AddOnConfigurationSid.Get()
	}
	if o.AddOnSid.IsSet() {
		toSerialize["add_on_sid"] = o.AddOnSid.Get()
	}
	if o.DateCompleted.IsSet() {
		toSerialize["date_completed"] = o.DateCompleted.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.ReferenceSid.IsSet() {
		toSerialize["reference_sid"] = o.ReferenceSid.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.SubresourceUris != nil {
		toSerialize["subresource_uris"] = o.SubresourceUris
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountRecordingRecordingAddOnResult struct {
	value *ApiV2010AccountRecordingRecordingAddOnResult
	isSet bool
}

func (v NullableApiV2010AccountRecordingRecordingAddOnResult) Get() *ApiV2010AccountRecordingRecordingAddOnResult {
	return v.value
}

func (v *NullableApiV2010AccountRecordingRecordingAddOnResult) Set(val *ApiV2010AccountRecordingRecordingAddOnResult) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountRecordingRecordingAddOnResult) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountRecordingRecordingAddOnResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountRecordingRecordingAddOnResult(val *ApiV2010AccountRecordingRecordingAddOnResult) *NullableApiV2010AccountRecordingRecordingAddOnResult {
	return &NullableApiV2010AccountRecordingRecordingAddOnResult{value: val, isSet: true}
}

func (v NullableApiV2010AccountRecordingRecordingAddOnResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountRecordingRecordingAddOnResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


