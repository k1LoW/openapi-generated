/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010Account struct for ApiV2010Account
type ApiV2010Account struct {
	// The authorization token for this account
	AuthToken NullableString `json:"auth_token,omitempty"`
	// The date this account was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The date this account was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// A human readable description of this account
	FriendlyName NullableString `json:"friendly_name,omitempty"`
	// The unique 34 character id representing the parent of this account
	OwnerAccountSid NullableString `json:"owner_account_sid,omitempty"`
	// A 34 character string that uniquely identifies this resource.
	Sid NullableString `json:"sid,omitempty"`
	// The status of this account
	Status NullableString `json:"status,omitempty"`
	// Account Instance Subresources
	SubresourceUris map[string]interface{} `json:"subresource_uris,omitempty"`
	// The type of this account
	Type NullableString `json:"type,omitempty"`
	// The URI for this resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010Account instantiates a new ApiV2010Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010Account() *ApiV2010Account {
	this := ApiV2010Account{}
	return &this
}

// NewApiV2010AccountWithDefaults instantiates a new ApiV2010Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountWithDefaults() *ApiV2010Account {
	this := ApiV2010Account{}
	return &this
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetAuthToken() string {
	if o == nil || o.AuthToken.Get() == nil {
		var ret string
		return ret
	}
	return *o.AuthToken.Get()
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetAuthTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthToken.Get(), o.AuthToken.IsSet()
}

// HasAuthToken returns a boolean if a field has been set.
func (o *ApiV2010Account) HasAuthToken() bool {
	if o != nil && o.AuthToken.IsSet() {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given NullableString and assigns it to the AuthToken field.
func (o *ApiV2010Account) SetAuthToken(v string) {
	o.AuthToken.Set(&v)
}
// SetAuthTokenNil sets the value for AuthToken to be an explicit nil
func (o *ApiV2010Account) SetAuthTokenNil() {
	o.AuthToken.Set(nil)
}

// UnsetAuthToken ensures that no value is present for AuthToken, not even an explicit nil
func (o *ApiV2010Account) UnsetAuthToken() {
	o.AuthToken.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010Account) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010Account) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010Account) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010Account) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010Account) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010Account) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010Account) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010Account) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetFriendlyName() string {
	if o == nil || o.FriendlyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ApiV2010Account) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *ApiV2010Account) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}
// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *ApiV2010Account) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *ApiV2010Account) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetOwnerAccountSid returns the OwnerAccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetOwnerAccountSid() string {
	if o == nil || o.OwnerAccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.OwnerAccountSid.Get()
}

// GetOwnerAccountSidOk returns a tuple with the OwnerAccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetOwnerAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerAccountSid.Get(), o.OwnerAccountSid.IsSet()
}

// HasOwnerAccountSid returns a boolean if a field has been set.
func (o *ApiV2010Account) HasOwnerAccountSid() bool {
	if o != nil && o.OwnerAccountSid.IsSet() {
		return true
	}

	return false
}

// SetOwnerAccountSid gets a reference to the given NullableString and assigns it to the OwnerAccountSid field.
func (o *ApiV2010Account) SetOwnerAccountSid(v string) {
	o.OwnerAccountSid.Set(&v)
}
// SetOwnerAccountSidNil sets the value for OwnerAccountSid to be an explicit nil
func (o *ApiV2010Account) SetOwnerAccountSidNil() {
	o.OwnerAccountSid.Set(nil)
}

// UnsetOwnerAccountSid ensures that no value is present for OwnerAccountSid, not even an explicit nil
func (o *ApiV2010Account) UnsetOwnerAccountSid() {
	o.OwnerAccountSid.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010Account) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010Account) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010Account) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010Account) UnsetSid() {
	o.Sid.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV2010Account) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ApiV2010Account) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ApiV2010Account) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ApiV2010Account) UnsetStatus() {
	o.Status.Unset()
}

// GetSubresourceUris returns the SubresourceUris field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetSubresourceUris() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.SubresourceUris
}

// GetSubresourceUrisOk returns a tuple with the SubresourceUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetSubresourceUrisOk() (map[string]interface{}, bool) {
	if o == nil || o.SubresourceUris == nil {
		return nil, false
	}
	return o.SubresourceUris, true
}

// HasSubresourceUris returns a boolean if a field has been set.
func (o *ApiV2010Account) HasSubresourceUris() bool {
	if o != nil && o.SubresourceUris != nil {
		return true
	}

	return false
}

// SetSubresourceUris gets a reference to the given map[string]interface{} and assigns it to the SubresourceUris field.
func (o *ApiV2010Account) SetSubresourceUris(v map[string]interface{}) {
	o.SubresourceUris = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ApiV2010Account) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ApiV2010Account) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ApiV2010Account) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ApiV2010Account) UnsetType() {
	o.Type.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010Account) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010Account) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010Account) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010Account) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010Account) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010Account) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010Account) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthToken.IsSet() {
		toSerialize["auth_token"] = o.AuthToken.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["friendly_name"] = o.FriendlyName.Get()
	}
	if o.OwnerAccountSid.IsSet() {
		toSerialize["owner_account_sid"] = o.OwnerAccountSid.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.SubresourceUris != nil {
		toSerialize["subresource_uris"] = o.SubresourceUris
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010Account struct {
	value *ApiV2010Account
	isSet bool
}

func (v NullableApiV2010Account) Get() *ApiV2010Account {
	return v.value
}

func (v *NullableApiV2010Account) Set(val *ApiV2010Account) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010Account) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010Account) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010Account(val *ApiV2010Account) *NullableApiV2010Account {
	return &NullableApiV2010Account{value: val, isSet: true}
}

func (v NullableApiV2010Account) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010Account) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


