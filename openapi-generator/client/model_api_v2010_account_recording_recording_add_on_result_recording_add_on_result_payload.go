/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload struct for ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload
type ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The SID of the Add-on configuration
	AddOnConfigurationSid NullableString `json:"add_on_configuration_sid,omitempty"`
	// The SID of the AddOnResult to which the payload belongs
	AddOnResultSid NullableString `json:"add_on_result_sid,omitempty"`
	// The SID of the Add-on to which the result belongs
	AddOnSid NullableString `json:"add_on_sid,omitempty"`
	// The MIME type of the payload
	ContentType NullableString `json:"content_type,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// The string that describes the payload
	Label NullableString `json:"label,omitempty"`
	// The SID of the recording to which the AddOnResult resource that contains the payload belongs
	ReferenceSid NullableString `json:"reference_sid,omitempty"`
	// The unique string that identifies the resource
	Sid NullableString `json:"sid,omitempty"`
	// A list of related resources identified by their relative URIs
	SubresourceUris map[string]interface{} `json:"subresource_uris,omitempty"`
}

// NewApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload instantiates a new ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload() *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload {
	this := ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload{}
	return &this
}

// NewApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayloadWithDefaults instantiates a new ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayloadWithDefaults() *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload {
	this := ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetAddOnConfigurationSid returns the AddOnConfigurationSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAddOnConfigurationSid() string {
	if o == nil || o.AddOnConfigurationSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AddOnConfigurationSid.Get()
}

// GetAddOnConfigurationSidOk returns a tuple with the AddOnConfigurationSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAddOnConfigurationSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddOnConfigurationSid.Get(), o.AddOnConfigurationSid.IsSet()
}

// HasAddOnConfigurationSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasAddOnConfigurationSid() bool {
	if o != nil && o.AddOnConfigurationSid.IsSet() {
		return true
	}

	return false
}

// SetAddOnConfigurationSid gets a reference to the given NullableString and assigns it to the AddOnConfigurationSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAddOnConfigurationSid(v string) {
	o.AddOnConfigurationSid.Set(&v)
}
// SetAddOnConfigurationSidNil sets the value for AddOnConfigurationSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAddOnConfigurationSidNil() {
	o.AddOnConfigurationSid.Set(nil)
}

// UnsetAddOnConfigurationSid ensures that no value is present for AddOnConfigurationSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetAddOnConfigurationSid() {
	o.AddOnConfigurationSid.Unset()
}

// GetAddOnResultSid returns the AddOnResultSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAddOnResultSid() string {
	if o == nil || o.AddOnResultSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AddOnResultSid.Get()
}

// GetAddOnResultSidOk returns a tuple with the AddOnResultSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAddOnResultSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddOnResultSid.Get(), o.AddOnResultSid.IsSet()
}

// HasAddOnResultSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasAddOnResultSid() bool {
	if o != nil && o.AddOnResultSid.IsSet() {
		return true
	}

	return false
}

// SetAddOnResultSid gets a reference to the given NullableString and assigns it to the AddOnResultSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAddOnResultSid(v string) {
	o.AddOnResultSid.Set(&v)
}
// SetAddOnResultSidNil sets the value for AddOnResultSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAddOnResultSidNil() {
	o.AddOnResultSid.Set(nil)
}

// UnsetAddOnResultSid ensures that no value is present for AddOnResultSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetAddOnResultSid() {
	o.AddOnResultSid.Unset()
}

// GetAddOnSid returns the AddOnSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAddOnSid() string {
	if o == nil || o.AddOnSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AddOnSid.Get()
}

// GetAddOnSidOk returns a tuple with the AddOnSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetAddOnSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddOnSid.Get(), o.AddOnSid.IsSet()
}

// HasAddOnSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasAddOnSid() bool {
	if o != nil && o.AddOnSid.IsSet() {
		return true
	}

	return false
}

// SetAddOnSid gets a reference to the given NullableString and assigns it to the AddOnSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAddOnSid(v string) {
	o.AddOnSid.Set(&v)
}
// SetAddOnSidNil sets the value for AddOnSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetAddOnSidNil() {
	o.AddOnSid.Set(nil)
}

// UnsetAddOnSid ensures that no value is present for AddOnSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetAddOnSid() {
	o.AddOnSid.Unset()
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetContentType() string {
	if o == nil || o.ContentType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// HasContentType returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasContentType() bool {
	if o != nil && o.ContentType.IsSet() {
		return true
	}

	return false
}

// SetContentType gets a reference to the given NullableString and assigns it to the ContentType field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetContentType(v string) {
	o.ContentType.Set(&v)
}
// SetContentTypeNil sets the value for ContentType to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetContentTypeNil() {
	o.ContentType.Set(nil)
}

// UnsetContentType ensures that no value is present for ContentType, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetContentType() {
	o.ContentType.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetLabel() string {
	if o == nil || o.Label.Get() == nil {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetLabel() {
	o.Label.Unset()
}

// GetReferenceSid returns the ReferenceSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetReferenceSid() string {
	if o == nil || o.ReferenceSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReferenceSid.Get()
}

// GetReferenceSidOk returns a tuple with the ReferenceSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetReferenceSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceSid.Get(), o.ReferenceSid.IsSet()
}

// HasReferenceSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasReferenceSid() bool {
	if o != nil && o.ReferenceSid.IsSet() {
		return true
	}

	return false
}

// SetReferenceSid gets a reference to the given NullableString and assigns it to the ReferenceSid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetReferenceSid(v string) {
	o.ReferenceSid.Set(&v)
}
// SetReferenceSidNil sets the value for ReferenceSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetReferenceSidNil() {
	o.ReferenceSid.Set(nil)
}

// UnsetReferenceSid ensures that no value is present for ReferenceSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetReferenceSid() {
	o.ReferenceSid.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnsetSid() {
	o.Sid.Unset()
}

// GetSubresourceUris returns the SubresourceUris field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetSubresourceUris() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.SubresourceUris
}

// GetSubresourceUrisOk returns a tuple with the SubresourceUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) GetSubresourceUrisOk() (map[string]interface{}, bool) {
	if o == nil || o.SubresourceUris == nil {
		return nil, false
	}
	return o.SubresourceUris, true
}

// HasSubresourceUris returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) HasSubresourceUris() bool {
	if o != nil && o.SubresourceUris != nil {
		return true
	}

	return false
}

// SetSubresourceUris gets a reference to the given map[string]interface{} and assigns it to the SubresourceUris field.
func (o *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) SetSubresourceUris(v map[string]interface{}) {
	o.SubresourceUris = v
}

func (o ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.AddOnConfigurationSid.IsSet() {
		toSerialize["add_on_configuration_sid"] = o.AddOnConfigurationSid.Get()
	}
	if o.AddOnResultSid.IsSet() {
		toSerialize["add_on_result_sid"] = o.AddOnResultSid.Get()
	}
	if o.AddOnSid.IsSet() {
		toSerialize["add_on_sid"] = o.AddOnSid.Get()
	}
	if o.ContentType.IsSet() {
		toSerialize["content_type"] = o.ContentType.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	if o.ReferenceSid.IsSet() {
		toSerialize["reference_sid"] = o.ReferenceSid.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.SubresourceUris != nil {
		toSerialize["subresource_uris"] = o.SubresourceUris
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload struct {
	value *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload
	isSet bool
}

func (v NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) Get() *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload {
	return v.value
}

func (v *NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) Set(val *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload(val *ApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) *NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload {
	return &NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload{value: val, isSet: true}
}

func (v NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountRecordingRecordingAddOnResultRecordingAddOnResultPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


