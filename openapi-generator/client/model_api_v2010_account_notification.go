/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountNotification struct for ApiV2010AccountNotification
type ApiV2010AccountNotification struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The API version used to generate the notification
	ApiVersion NullableString `json:"api_version,omitempty"`
	// The SID of the Call the resource is associated with
	CallSid NullableString `json:"call_sid,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// A unique error code corresponding to the notification
	ErrorCode NullableString `json:"error_code,omitempty"`
	// An integer log level
	Log NullableString `json:"log,omitempty"`
	// The date the notification was generated
	MessageDate NullableString `json:"message_date,omitempty"`
	// The text of the notification
	MessageText NullableString `json:"message_text,omitempty"`
	// A URL for more information about the error code
	MoreInfo NullableString `json:"more_info,omitempty"`
	// HTTP method used with the request url
	RequestMethod NullableString `json:"request_method,omitempty"`
	// URL of the resource that generated the notification
	RequestUrl NullableString `json:"request_url,omitempty"`
	// The unique string that identifies the resource
	Sid NullableString `json:"sid,omitempty"`
	// The URI of the resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountNotification instantiates a new ApiV2010AccountNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountNotification() *ApiV2010AccountNotification {
	this := ApiV2010AccountNotification{}
	return &this
}

// NewApiV2010AccountNotificationWithDefaults instantiates a new ApiV2010AccountNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountNotificationWithDefaults() *ApiV2010AccountNotification {
	this := ApiV2010AccountNotification{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountNotification) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountNotification) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetApiVersion() string {
	if o == nil || o.ApiVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion.Get()
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiVersion.Get(), o.ApiVersion.IsSet()
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasApiVersion() bool {
	if o != nil && o.ApiVersion.IsSet() {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given NullableString and assigns it to the ApiVersion field.
func (o *ApiV2010AccountNotification) SetApiVersion(v string) {
	o.ApiVersion.Set(&v)
}
// SetApiVersionNil sets the value for ApiVersion to be an explicit nil
func (o *ApiV2010AccountNotification) SetApiVersionNil() {
	o.ApiVersion.Set(nil)
}

// UnsetApiVersion ensures that no value is present for ApiVersion, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetApiVersion() {
	o.ApiVersion.Unset()
}

// GetCallSid returns the CallSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetCallSid() string {
	if o == nil || o.CallSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.CallSid.Get()
}

// GetCallSidOk returns a tuple with the CallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetCallSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallSid.Get(), o.CallSid.IsSet()
}

// HasCallSid returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasCallSid() bool {
	if o != nil && o.CallSid.IsSet() {
		return true
	}

	return false
}

// SetCallSid gets a reference to the given NullableString and assigns it to the CallSid field.
func (o *ApiV2010AccountNotification) SetCallSid(v string) {
	o.CallSid.Set(&v)
}
// SetCallSidNil sets the value for CallSid to be an explicit nil
func (o *ApiV2010AccountNotification) SetCallSidNil() {
	o.CallSid.Set(nil)
}

// UnsetCallSid ensures that no value is present for CallSid, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetCallSid() {
	o.CallSid.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountNotification) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountNotification) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountNotification) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountNotification) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetErrorCode() string {
	if o == nil || o.ErrorCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode.Get()
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorCode.Get(), o.ErrorCode.IsSet()
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasErrorCode() bool {
	if o != nil && o.ErrorCode.IsSet() {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given NullableString and assigns it to the ErrorCode field.
func (o *ApiV2010AccountNotification) SetErrorCode(v string) {
	o.ErrorCode.Set(&v)
}
// SetErrorCodeNil sets the value for ErrorCode to be an explicit nil
func (o *ApiV2010AccountNotification) SetErrorCodeNil() {
	o.ErrorCode.Set(nil)
}

// UnsetErrorCode ensures that no value is present for ErrorCode, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetErrorCode() {
	o.ErrorCode.Unset()
}

// GetLog returns the Log field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetLog() string {
	if o == nil || o.Log.Get() == nil {
		var ret string
		return ret
	}
	return *o.Log.Get()
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetLogOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Log.Get(), o.Log.IsSet()
}

// HasLog returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasLog() bool {
	if o != nil && o.Log.IsSet() {
		return true
	}

	return false
}

// SetLog gets a reference to the given NullableString and assigns it to the Log field.
func (o *ApiV2010AccountNotification) SetLog(v string) {
	o.Log.Set(&v)
}
// SetLogNil sets the value for Log to be an explicit nil
func (o *ApiV2010AccountNotification) SetLogNil() {
	o.Log.Set(nil)
}

// UnsetLog ensures that no value is present for Log, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetLog() {
	o.Log.Unset()
}

// GetMessageDate returns the MessageDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetMessageDate() string {
	if o == nil || o.MessageDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.MessageDate.Get()
}

// GetMessageDateOk returns a tuple with the MessageDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetMessageDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageDate.Get(), o.MessageDate.IsSet()
}

// HasMessageDate returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasMessageDate() bool {
	if o != nil && o.MessageDate.IsSet() {
		return true
	}

	return false
}

// SetMessageDate gets a reference to the given NullableString and assigns it to the MessageDate field.
func (o *ApiV2010AccountNotification) SetMessageDate(v string) {
	o.MessageDate.Set(&v)
}
// SetMessageDateNil sets the value for MessageDate to be an explicit nil
func (o *ApiV2010AccountNotification) SetMessageDateNil() {
	o.MessageDate.Set(nil)
}

// UnsetMessageDate ensures that no value is present for MessageDate, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetMessageDate() {
	o.MessageDate.Unset()
}

// GetMessageText returns the MessageText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetMessageText() string {
	if o == nil || o.MessageText.Get() == nil {
		var ret string
		return ret
	}
	return *o.MessageText.Get()
}

// GetMessageTextOk returns a tuple with the MessageText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetMessageTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageText.Get(), o.MessageText.IsSet()
}

// HasMessageText returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasMessageText() bool {
	if o != nil && o.MessageText.IsSet() {
		return true
	}

	return false
}

// SetMessageText gets a reference to the given NullableString and assigns it to the MessageText field.
func (o *ApiV2010AccountNotification) SetMessageText(v string) {
	o.MessageText.Set(&v)
}
// SetMessageTextNil sets the value for MessageText to be an explicit nil
func (o *ApiV2010AccountNotification) SetMessageTextNil() {
	o.MessageText.Set(nil)
}

// UnsetMessageText ensures that no value is present for MessageText, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetMessageText() {
	o.MessageText.Unset()
}

// GetMoreInfo returns the MoreInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetMoreInfo() string {
	if o == nil || o.MoreInfo.Get() == nil {
		var ret string
		return ret
	}
	return *o.MoreInfo.Get()
}

// GetMoreInfoOk returns a tuple with the MoreInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetMoreInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MoreInfo.Get(), o.MoreInfo.IsSet()
}

// HasMoreInfo returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasMoreInfo() bool {
	if o != nil && o.MoreInfo.IsSet() {
		return true
	}

	return false
}

// SetMoreInfo gets a reference to the given NullableString and assigns it to the MoreInfo field.
func (o *ApiV2010AccountNotification) SetMoreInfo(v string) {
	o.MoreInfo.Set(&v)
}
// SetMoreInfoNil sets the value for MoreInfo to be an explicit nil
func (o *ApiV2010AccountNotification) SetMoreInfoNil() {
	o.MoreInfo.Set(nil)
}

// UnsetMoreInfo ensures that no value is present for MoreInfo, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetMoreInfo() {
	o.MoreInfo.Unset()
}

// GetRequestMethod returns the RequestMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetRequestMethod() string {
	if o == nil || o.RequestMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.RequestMethod.Get()
}

// GetRequestMethodOk returns a tuple with the RequestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetRequestMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestMethod.Get(), o.RequestMethod.IsSet()
}

// HasRequestMethod returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasRequestMethod() bool {
	if o != nil && o.RequestMethod.IsSet() {
		return true
	}

	return false
}

// SetRequestMethod gets a reference to the given NullableString and assigns it to the RequestMethod field.
func (o *ApiV2010AccountNotification) SetRequestMethod(v string) {
	o.RequestMethod.Set(&v)
}
// SetRequestMethodNil sets the value for RequestMethod to be an explicit nil
func (o *ApiV2010AccountNotification) SetRequestMethodNil() {
	o.RequestMethod.Set(nil)
}

// UnsetRequestMethod ensures that no value is present for RequestMethod, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetRequestMethod() {
	o.RequestMethod.Unset()
}

// GetRequestUrl returns the RequestUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetRequestUrl() string {
	if o == nil || o.RequestUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.RequestUrl.Get()
}

// GetRequestUrlOk returns a tuple with the RequestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetRequestUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestUrl.Get(), o.RequestUrl.IsSet()
}

// HasRequestUrl returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasRequestUrl() bool {
	if o != nil && o.RequestUrl.IsSet() {
		return true
	}

	return false
}

// SetRequestUrl gets a reference to the given NullableString and assigns it to the RequestUrl field.
func (o *ApiV2010AccountNotification) SetRequestUrl(v string) {
	o.RequestUrl.Set(&v)
}
// SetRequestUrlNil sets the value for RequestUrl to be an explicit nil
func (o *ApiV2010AccountNotification) SetRequestUrlNil() {
	o.RequestUrl.Set(nil)
}

// UnsetRequestUrl ensures that no value is present for RequestUrl, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetRequestUrl() {
	o.RequestUrl.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountNotification) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountNotification) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetSid() {
	o.Sid.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountNotification) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountNotification) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountNotification) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountNotification) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountNotification) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountNotification) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountNotification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.ApiVersion.IsSet() {
		toSerialize["api_version"] = o.ApiVersion.Get()
	}
	if o.CallSid.IsSet() {
		toSerialize["call_sid"] = o.CallSid.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.ErrorCode.IsSet() {
		toSerialize["error_code"] = o.ErrorCode.Get()
	}
	if o.Log.IsSet() {
		toSerialize["log"] = o.Log.Get()
	}
	if o.MessageDate.IsSet() {
		toSerialize["message_date"] = o.MessageDate.Get()
	}
	if o.MessageText.IsSet() {
		toSerialize["message_text"] = o.MessageText.Get()
	}
	if o.MoreInfo.IsSet() {
		toSerialize["more_info"] = o.MoreInfo.Get()
	}
	if o.RequestMethod.IsSet() {
		toSerialize["request_method"] = o.RequestMethod.Get()
	}
	if o.RequestUrl.IsSet() {
		toSerialize["request_url"] = o.RequestUrl.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountNotification struct {
	value *ApiV2010AccountNotification
	isSet bool
}

func (v NullableApiV2010AccountNotification) Get() *ApiV2010AccountNotification {
	return v.value
}

func (v *NullableApiV2010AccountNotification) Set(val *ApiV2010AccountNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountNotification(val *ApiV2010AccountNotification) *NullableApiV2010AccountNotification {
	return &NullableApiV2010AccountNotification{value: val, isSet: true}
}

func (v NullableApiV2010AccountNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


