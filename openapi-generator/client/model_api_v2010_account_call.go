/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountCall struct for ApiV2010AccountCall
type ApiV2010AccountCall struct {
	// The SID of the Account that created this resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// Either `human` or `machine` if this call was initiated with answering machine detection. Empty otherwise.
	AnsweredBy NullableString `json:"answered_by,omitempty"`
	// The API Version used to create the call
	ApiVersion NullableString `json:"api_version,omitempty"`
	// The caller's name if this call was an incoming call to a phone number with caller ID Lookup enabled. Otherwise, empty.
	CallerName NullableString `json:"caller_name,omitempty"`
	// The RFC 2822 date and time in GMT that this resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that this resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// A string describing the direction of the call. `inbound` for inbound calls, `outbound-api` for calls initiated via the REST API or `outbound-dial` for calls initiated by a `Dial` verb.
	Direction NullableString `json:"direction,omitempty"`
	// The length of the call in seconds.
	Duration NullableString `json:"duration,omitempty"`
	// The end time of the call. Null if the call did not complete successfully.
	EndTime NullableString `json:"end_time,omitempty"`
	// The forwarding phone number if this call was an incoming call forwarded from another number (depends on carrier supporting forwarding). Otherwise, empty.
	ForwardedFrom NullableString `json:"forwarded_from,omitempty"`
	// The phone number, SIP address or Client identifier that made this call. Phone numbers are in E.164 format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.
	From NullableString `json:"from,omitempty"`
	// The calling phone number, SIP address, or Client identifier formatted for display.
	FromFormatted NullableString `json:"from_formatted,omitempty"`
	// The Group SID associated with this call. If no Group is associated with the call, the field is empty.
	GroupSid NullableString `json:"group_sid,omitempty"`
	// The SID that identifies the call that created this leg.
	ParentCallSid NullableString `json:"parent_call_sid,omitempty"`
	// If the call was inbound, this is the SID of the IncomingPhoneNumber resource that received the call. If the call was outbound, it is the SID of the OutgoingCallerId resource from which the call was placed.
	PhoneNumberSid NullableString `json:"phone_number_sid,omitempty"`
	// The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available.
	Price NullableString `json:"price,omitempty"`
	// The currency in which `Price` is measured.
	PriceUnit NullableString `json:"price_unit,omitempty"`
	// The wait time in milliseconds before the call is placed.
	QueueTime NullableString `json:"queue_time,omitempty"`
	// The unique string that identifies this resource
	Sid NullableString `json:"sid,omitempty"`
	// The start time of the call. Null if the call has not yet been dialed.
	StartTime NullableString `json:"start_time,omitempty"`
	// The status of this call.
	Status NullableString `json:"status,omitempty"`
	// A list of related subresources identified by their relative URIs
	SubresourceUris map[string]interface{} `json:"subresource_uris,omitempty"`
	// The phone number, SIP address or Client identifier that received this call. Phone numbers are in E.164 format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.
	To NullableString `json:"to,omitempty"`
	// The phone number, SIP address or Client identifier that received this call. Formatted for display.
	ToFormatted NullableString `json:"to_formatted,omitempty"`
	// The (optional) unique identifier of the trunk resource that was used for this call.
	TrunkSid NullableString `json:"trunk_sid,omitempty"`
	// The URI of this resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountCall instantiates a new ApiV2010AccountCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountCall() *ApiV2010AccountCall {
	this := ApiV2010AccountCall{}
	return &this
}

// NewApiV2010AccountCallWithDefaults instantiates a new ApiV2010AccountCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountCallWithDefaults() *ApiV2010AccountCall {
	this := ApiV2010AccountCall{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountCall) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountCall) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetAnsweredBy returns the AnsweredBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetAnsweredBy() string {
	if o == nil || o.AnsweredBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.AnsweredBy.Get()
}

// GetAnsweredByOk returns a tuple with the AnsweredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetAnsweredByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AnsweredBy.Get(), o.AnsweredBy.IsSet()
}

// HasAnsweredBy returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasAnsweredBy() bool {
	if o != nil && o.AnsweredBy.IsSet() {
		return true
	}

	return false
}

// SetAnsweredBy gets a reference to the given NullableString and assigns it to the AnsweredBy field.
func (o *ApiV2010AccountCall) SetAnsweredBy(v string) {
	o.AnsweredBy.Set(&v)
}
// SetAnsweredByNil sets the value for AnsweredBy to be an explicit nil
func (o *ApiV2010AccountCall) SetAnsweredByNil() {
	o.AnsweredBy.Set(nil)
}

// UnsetAnsweredBy ensures that no value is present for AnsweredBy, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetAnsweredBy() {
	o.AnsweredBy.Unset()
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetApiVersion() string {
	if o == nil || o.ApiVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion.Get()
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiVersion.Get(), o.ApiVersion.IsSet()
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasApiVersion() bool {
	if o != nil && o.ApiVersion.IsSet() {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given NullableString and assigns it to the ApiVersion field.
func (o *ApiV2010AccountCall) SetApiVersion(v string) {
	o.ApiVersion.Set(&v)
}
// SetApiVersionNil sets the value for ApiVersion to be an explicit nil
func (o *ApiV2010AccountCall) SetApiVersionNil() {
	o.ApiVersion.Set(nil)
}

// UnsetApiVersion ensures that no value is present for ApiVersion, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetApiVersion() {
	o.ApiVersion.Unset()
}

// GetCallerName returns the CallerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetCallerName() string {
	if o == nil || o.CallerName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CallerName.Get()
}

// GetCallerNameOk returns a tuple with the CallerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetCallerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallerName.Get(), o.CallerName.IsSet()
}

// HasCallerName returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasCallerName() bool {
	if o != nil && o.CallerName.IsSet() {
		return true
	}

	return false
}

// SetCallerName gets a reference to the given NullableString and assigns it to the CallerName field.
func (o *ApiV2010AccountCall) SetCallerName(v string) {
	o.CallerName.Set(&v)
}
// SetCallerNameNil sets the value for CallerName to be an explicit nil
func (o *ApiV2010AccountCall) SetCallerNameNil() {
	o.CallerName.Set(nil)
}

// UnsetCallerName ensures that no value is present for CallerName, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetCallerName() {
	o.CallerName.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountCall) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountCall) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountCall) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountCall) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetDirection returns the Direction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetDirection() string {
	if o == nil || o.Direction.Get() == nil {
		var ret string
		return ret
	}
	return *o.Direction.Get()
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Direction.Get(), o.Direction.IsSet()
}

// HasDirection returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasDirection() bool {
	if o != nil && o.Direction.IsSet() {
		return true
	}

	return false
}

// SetDirection gets a reference to the given NullableString and assigns it to the Direction field.
func (o *ApiV2010AccountCall) SetDirection(v string) {
	o.Direction.Set(&v)
}
// SetDirectionNil sets the value for Direction to be an explicit nil
func (o *ApiV2010AccountCall) SetDirectionNil() {
	o.Direction.Set(nil)
}

// UnsetDirection ensures that no value is present for Direction, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetDirection() {
	o.Direction.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetDuration() string {
	if o == nil || o.Duration.Get() == nil {
		var ret string
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableString and assigns it to the Duration field.
func (o *ApiV2010AccountCall) SetDuration(v string) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *ApiV2010AccountCall) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetDuration() {
	o.Duration.Unset()
}

// GetEndTime returns the EndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetEndTime() string {
	if o == nil || o.EndTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.EndTime.Get()
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTime.Get(), o.EndTime.IsSet()
}

// HasEndTime returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasEndTime() bool {
	if o != nil && o.EndTime.IsSet() {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given NullableString and assigns it to the EndTime field.
func (o *ApiV2010AccountCall) SetEndTime(v string) {
	o.EndTime.Set(&v)
}
// SetEndTimeNil sets the value for EndTime to be an explicit nil
func (o *ApiV2010AccountCall) SetEndTimeNil() {
	o.EndTime.Set(nil)
}

// UnsetEndTime ensures that no value is present for EndTime, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetEndTime() {
	o.EndTime.Unset()
}

// GetForwardedFrom returns the ForwardedFrom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetForwardedFrom() string {
	if o == nil || o.ForwardedFrom.Get() == nil {
		var ret string
		return ret
	}
	return *o.ForwardedFrom.Get()
}

// GetForwardedFromOk returns a tuple with the ForwardedFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetForwardedFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForwardedFrom.Get(), o.ForwardedFrom.IsSet()
}

// HasForwardedFrom returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasForwardedFrom() bool {
	if o != nil && o.ForwardedFrom.IsSet() {
		return true
	}

	return false
}

// SetForwardedFrom gets a reference to the given NullableString and assigns it to the ForwardedFrom field.
func (o *ApiV2010AccountCall) SetForwardedFrom(v string) {
	o.ForwardedFrom.Set(&v)
}
// SetForwardedFromNil sets the value for ForwardedFrom to be an explicit nil
func (o *ApiV2010AccountCall) SetForwardedFromNil() {
	o.ForwardedFrom.Set(nil)
}

// UnsetForwardedFrom ensures that no value is present for ForwardedFrom, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetForwardedFrom() {
	o.ForwardedFrom.Unset()
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetFrom() string {
	if o == nil || o.From.Get() == nil {
		var ret string
		return ret
	}
	return *o.From.Get()
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.From.Get(), o.From.IsSet()
}

// HasFrom returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasFrom() bool {
	if o != nil && o.From.IsSet() {
		return true
	}

	return false
}

// SetFrom gets a reference to the given NullableString and assigns it to the From field.
func (o *ApiV2010AccountCall) SetFrom(v string) {
	o.From.Set(&v)
}
// SetFromNil sets the value for From to be an explicit nil
func (o *ApiV2010AccountCall) SetFromNil() {
	o.From.Set(nil)
}

// UnsetFrom ensures that no value is present for From, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetFrom() {
	o.From.Unset()
}

// GetFromFormatted returns the FromFormatted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetFromFormatted() string {
	if o == nil || o.FromFormatted.Get() == nil {
		var ret string
		return ret
	}
	return *o.FromFormatted.Get()
}

// GetFromFormattedOk returns a tuple with the FromFormatted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetFromFormattedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FromFormatted.Get(), o.FromFormatted.IsSet()
}

// HasFromFormatted returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasFromFormatted() bool {
	if o != nil && o.FromFormatted.IsSet() {
		return true
	}

	return false
}

// SetFromFormatted gets a reference to the given NullableString and assigns it to the FromFormatted field.
func (o *ApiV2010AccountCall) SetFromFormatted(v string) {
	o.FromFormatted.Set(&v)
}
// SetFromFormattedNil sets the value for FromFormatted to be an explicit nil
func (o *ApiV2010AccountCall) SetFromFormattedNil() {
	o.FromFormatted.Set(nil)
}

// UnsetFromFormatted ensures that no value is present for FromFormatted, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetFromFormatted() {
	o.FromFormatted.Unset()
}

// GetGroupSid returns the GroupSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetGroupSid() string {
	if o == nil || o.GroupSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.GroupSid.Get()
}

// GetGroupSidOk returns a tuple with the GroupSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetGroupSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupSid.Get(), o.GroupSid.IsSet()
}

// HasGroupSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasGroupSid() bool {
	if o != nil && o.GroupSid.IsSet() {
		return true
	}

	return false
}

// SetGroupSid gets a reference to the given NullableString and assigns it to the GroupSid field.
func (o *ApiV2010AccountCall) SetGroupSid(v string) {
	o.GroupSid.Set(&v)
}
// SetGroupSidNil sets the value for GroupSid to be an explicit nil
func (o *ApiV2010AccountCall) SetGroupSidNil() {
	o.GroupSid.Set(nil)
}

// UnsetGroupSid ensures that no value is present for GroupSid, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetGroupSid() {
	o.GroupSid.Unset()
}

// GetParentCallSid returns the ParentCallSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetParentCallSid() string {
	if o == nil || o.ParentCallSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentCallSid.Get()
}

// GetParentCallSidOk returns a tuple with the ParentCallSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetParentCallSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentCallSid.Get(), o.ParentCallSid.IsSet()
}

// HasParentCallSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasParentCallSid() bool {
	if o != nil && o.ParentCallSid.IsSet() {
		return true
	}

	return false
}

// SetParentCallSid gets a reference to the given NullableString and assigns it to the ParentCallSid field.
func (o *ApiV2010AccountCall) SetParentCallSid(v string) {
	o.ParentCallSid.Set(&v)
}
// SetParentCallSidNil sets the value for ParentCallSid to be an explicit nil
func (o *ApiV2010AccountCall) SetParentCallSidNil() {
	o.ParentCallSid.Set(nil)
}

// UnsetParentCallSid ensures that no value is present for ParentCallSid, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetParentCallSid() {
	o.ParentCallSid.Unset()
}

// GetPhoneNumberSid returns the PhoneNumberSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetPhoneNumberSid() string {
	if o == nil || o.PhoneNumberSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberSid.Get()
}

// GetPhoneNumberSidOk returns a tuple with the PhoneNumberSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetPhoneNumberSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumberSid.Get(), o.PhoneNumberSid.IsSet()
}

// HasPhoneNumberSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasPhoneNumberSid() bool {
	if o != nil && o.PhoneNumberSid.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumberSid gets a reference to the given NullableString and assigns it to the PhoneNumberSid field.
func (o *ApiV2010AccountCall) SetPhoneNumberSid(v string) {
	o.PhoneNumberSid.Set(&v)
}
// SetPhoneNumberSidNil sets the value for PhoneNumberSid to be an explicit nil
func (o *ApiV2010AccountCall) SetPhoneNumberSidNil() {
	o.PhoneNumberSid.Set(nil)
}

// UnsetPhoneNumberSid ensures that no value is present for PhoneNumberSid, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetPhoneNumberSid() {
	o.PhoneNumberSid.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetPrice() string {
	if o == nil || o.Price.Get() == nil {
		var ret string
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableString and assigns it to the Price field.
func (o *ApiV2010AccountCall) SetPrice(v string) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *ApiV2010AccountCall) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetPrice() {
	o.Price.Unset()
}

// GetPriceUnit returns the PriceUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetPriceUnit() string {
	if o == nil || o.PriceUnit.Get() == nil {
		var ret string
		return ret
	}
	return *o.PriceUnit.Get()
}

// GetPriceUnitOk returns a tuple with the PriceUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetPriceUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceUnit.Get(), o.PriceUnit.IsSet()
}

// HasPriceUnit returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasPriceUnit() bool {
	if o != nil && o.PriceUnit.IsSet() {
		return true
	}

	return false
}

// SetPriceUnit gets a reference to the given NullableString and assigns it to the PriceUnit field.
func (o *ApiV2010AccountCall) SetPriceUnit(v string) {
	o.PriceUnit.Set(&v)
}
// SetPriceUnitNil sets the value for PriceUnit to be an explicit nil
func (o *ApiV2010AccountCall) SetPriceUnitNil() {
	o.PriceUnit.Set(nil)
}

// UnsetPriceUnit ensures that no value is present for PriceUnit, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetPriceUnit() {
	o.PriceUnit.Unset()
}

// GetQueueTime returns the QueueTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetQueueTime() string {
	if o == nil || o.QueueTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.QueueTime.Get()
}

// GetQueueTimeOk returns a tuple with the QueueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetQueueTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueueTime.Get(), o.QueueTime.IsSet()
}

// HasQueueTime returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasQueueTime() bool {
	if o != nil && o.QueueTime.IsSet() {
		return true
	}

	return false
}

// SetQueueTime gets a reference to the given NullableString and assigns it to the QueueTime field.
func (o *ApiV2010AccountCall) SetQueueTime(v string) {
	o.QueueTime.Set(&v)
}
// SetQueueTimeNil sets the value for QueueTime to be an explicit nil
func (o *ApiV2010AccountCall) SetQueueTimeNil() {
	o.QueueTime.Set(nil)
}

// UnsetQueueTime ensures that no value is present for QueueTime, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetQueueTime() {
	o.QueueTime.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountCall) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountCall) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetSid() {
	o.Sid.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetStartTime() string {
	if o == nil || o.StartTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableString and assigns it to the StartTime field.
func (o *ApiV2010AccountCall) SetStartTime(v string) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *ApiV2010AccountCall) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ApiV2010AccountCall) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ApiV2010AccountCall) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetStatus() {
	o.Status.Unset()
}

// GetSubresourceUris returns the SubresourceUris field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetSubresourceUris() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.SubresourceUris
}

// GetSubresourceUrisOk returns a tuple with the SubresourceUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetSubresourceUrisOk() (map[string]interface{}, bool) {
	if o == nil || o.SubresourceUris == nil {
		return nil, false
	}
	return o.SubresourceUris, true
}

// HasSubresourceUris returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasSubresourceUris() bool {
	if o != nil && o.SubresourceUris != nil {
		return true
	}

	return false
}

// SetSubresourceUris gets a reference to the given map[string]interface{} and assigns it to the SubresourceUris field.
func (o *ApiV2010AccountCall) SetSubresourceUris(v map[string]interface{}) {
	o.SubresourceUris = v
}

// GetTo returns the To field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetTo() string {
	if o == nil || o.To.Get() == nil {
		var ret string
		return ret
	}
	return *o.To.Get()
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.To.Get(), o.To.IsSet()
}

// HasTo returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasTo() bool {
	if o != nil && o.To.IsSet() {
		return true
	}

	return false
}

// SetTo gets a reference to the given NullableString and assigns it to the To field.
func (o *ApiV2010AccountCall) SetTo(v string) {
	o.To.Set(&v)
}
// SetToNil sets the value for To to be an explicit nil
func (o *ApiV2010AccountCall) SetToNil() {
	o.To.Set(nil)
}

// UnsetTo ensures that no value is present for To, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetTo() {
	o.To.Unset()
}

// GetToFormatted returns the ToFormatted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetToFormatted() string {
	if o == nil || o.ToFormatted.Get() == nil {
		var ret string
		return ret
	}
	return *o.ToFormatted.Get()
}

// GetToFormattedOk returns a tuple with the ToFormatted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetToFormattedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToFormatted.Get(), o.ToFormatted.IsSet()
}

// HasToFormatted returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasToFormatted() bool {
	if o != nil && o.ToFormatted.IsSet() {
		return true
	}

	return false
}

// SetToFormatted gets a reference to the given NullableString and assigns it to the ToFormatted field.
func (o *ApiV2010AccountCall) SetToFormatted(v string) {
	o.ToFormatted.Set(&v)
}
// SetToFormattedNil sets the value for ToFormatted to be an explicit nil
func (o *ApiV2010AccountCall) SetToFormattedNil() {
	o.ToFormatted.Set(nil)
}

// UnsetToFormatted ensures that no value is present for ToFormatted, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetToFormatted() {
	o.ToFormatted.Unset()
}

// GetTrunkSid returns the TrunkSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetTrunkSid() string {
	if o == nil || o.TrunkSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.TrunkSid.Get()
}

// GetTrunkSidOk returns a tuple with the TrunkSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetTrunkSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrunkSid.Get(), o.TrunkSid.IsSet()
}

// HasTrunkSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasTrunkSid() bool {
	if o != nil && o.TrunkSid.IsSet() {
		return true
	}

	return false
}

// SetTrunkSid gets a reference to the given NullableString and assigns it to the TrunkSid field.
func (o *ApiV2010AccountCall) SetTrunkSid(v string) {
	o.TrunkSid.Set(&v)
}
// SetTrunkSidNil sets the value for TrunkSid to be an explicit nil
func (o *ApiV2010AccountCall) SetTrunkSidNil() {
	o.TrunkSid.Set(nil)
}

// UnsetTrunkSid ensures that no value is present for TrunkSid, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetTrunkSid() {
	o.TrunkSid.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCall) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCall) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountCall) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountCall) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountCall) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountCall) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountCall) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.AnsweredBy.IsSet() {
		toSerialize["answered_by"] = o.AnsweredBy.Get()
	}
	if o.ApiVersion.IsSet() {
		toSerialize["api_version"] = o.ApiVersion.Get()
	}
	if o.CallerName.IsSet() {
		toSerialize["caller_name"] = o.CallerName.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.Direction.IsSet() {
		toSerialize["direction"] = o.Direction.Get()
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.EndTime.IsSet() {
		toSerialize["end_time"] = o.EndTime.Get()
	}
	if o.ForwardedFrom.IsSet() {
		toSerialize["forwarded_from"] = o.ForwardedFrom.Get()
	}
	if o.From.IsSet() {
		toSerialize["from"] = o.From.Get()
	}
	if o.FromFormatted.IsSet() {
		toSerialize["from_formatted"] = o.FromFormatted.Get()
	}
	if o.GroupSid.IsSet() {
		toSerialize["group_sid"] = o.GroupSid.Get()
	}
	if o.ParentCallSid.IsSet() {
		toSerialize["parent_call_sid"] = o.ParentCallSid.Get()
	}
	if o.PhoneNumberSid.IsSet() {
		toSerialize["phone_number_sid"] = o.PhoneNumberSid.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.PriceUnit.IsSet() {
		toSerialize["price_unit"] = o.PriceUnit.Get()
	}
	if o.QueueTime.IsSet() {
		toSerialize["queue_time"] = o.QueueTime.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.StartTime.IsSet() {
		toSerialize["start_time"] = o.StartTime.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.SubresourceUris != nil {
		toSerialize["subresource_uris"] = o.SubresourceUris
	}
	if o.To.IsSet() {
		toSerialize["to"] = o.To.Get()
	}
	if o.ToFormatted.IsSet() {
		toSerialize["to_formatted"] = o.ToFormatted.Get()
	}
	if o.TrunkSid.IsSet() {
		toSerialize["trunk_sid"] = o.TrunkSid.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountCall struct {
	value *ApiV2010AccountCall
	isSet bool
}

func (v NullableApiV2010AccountCall) Get() *ApiV2010AccountCall {
	return v.value
}

func (v *NullableApiV2010AccountCall) Set(val *ApiV2010AccountCall) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountCall) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountCall(val *ApiV2010AccountCall) *NullableApiV2010AccountCall {
	return &NullableApiV2010AccountCall{value: val, isSet: true}
}

func (v NullableApiV2010AccountCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


