/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountRecordingRecordingTranscription struct for ApiV2010AccountRecordingRecordingTranscription
type ApiV2010AccountRecordingRecordingTranscription struct {
	// The SID of the Account that created the resource
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The API version used to create the transcription
	ApiVersion NullableString `json:"api_version,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The RFC 2822 date and time in GMT that the resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// The duration of the transcribed audio in seconds.
	Duration NullableString `json:"duration,omitempty"`
	// The charge for the transcription
	Price NullableFloat32 `json:"price,omitempty"`
	// The currency in which price is measured
	PriceUnit NullableString `json:"price_unit,omitempty"`
	// The SID that identifies the transcription's recording
	RecordingSid NullableString `json:"recording_sid,omitempty"`
	// The unique string that identifies the resource
	Sid NullableString `json:"sid,omitempty"`
	// The status of the transcription
	Status NullableString `json:"status,omitempty"`
	// The text content of the transcription.
	TranscriptionText NullableString `json:"transcription_text,omitempty"`
	// The transcription type
	Type NullableString `json:"type,omitempty"`
	// The URI of the resource, relative to `https://api.twilio.com`
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountRecordingRecordingTranscription instantiates a new ApiV2010AccountRecordingRecordingTranscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountRecordingRecordingTranscription() *ApiV2010AccountRecordingRecordingTranscription {
	this := ApiV2010AccountRecordingRecordingTranscription{}
	return &this
}

// NewApiV2010AccountRecordingRecordingTranscriptionWithDefaults instantiates a new ApiV2010AccountRecordingRecordingTranscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountRecordingRecordingTranscriptionWithDefaults() *ApiV2010AccountRecordingRecordingTranscription {
	this := ApiV2010AccountRecordingRecordingTranscription{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetApiVersion() string {
	if o == nil || o.ApiVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion.Get()
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiVersion.Get(), o.ApiVersion.IsSet()
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasApiVersion() bool {
	if o != nil && o.ApiVersion.IsSet() {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given NullableString and assigns it to the ApiVersion field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetApiVersion(v string) {
	o.ApiVersion.Set(&v)
}
// SetApiVersionNil sets the value for ApiVersion to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetApiVersionNil() {
	o.ApiVersion.Set(nil)
}

// UnsetApiVersion ensures that no value is present for ApiVersion, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetApiVersion() {
	o.ApiVersion.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetDuration() string {
	if o == nil || o.Duration.Get() == nil {
		var ret string
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableString and assigns it to the Duration field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetDuration(v string) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetDuration() {
	o.Duration.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetPrice() float32 {
	if o == nil || o.Price.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat32 and assigns it to the Price field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetPrice(v float32) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetPrice() {
	o.Price.Unset()
}

// GetPriceUnit returns the PriceUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetPriceUnit() string {
	if o == nil || o.PriceUnit.Get() == nil {
		var ret string
		return ret
	}
	return *o.PriceUnit.Get()
}

// GetPriceUnitOk returns a tuple with the PriceUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetPriceUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceUnit.Get(), o.PriceUnit.IsSet()
}

// HasPriceUnit returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasPriceUnit() bool {
	if o != nil && o.PriceUnit.IsSet() {
		return true
	}

	return false
}

// SetPriceUnit gets a reference to the given NullableString and assigns it to the PriceUnit field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetPriceUnit(v string) {
	o.PriceUnit.Set(&v)
}
// SetPriceUnitNil sets the value for PriceUnit to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetPriceUnitNil() {
	o.PriceUnit.Set(nil)
}

// UnsetPriceUnit ensures that no value is present for PriceUnit, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetPriceUnit() {
	o.PriceUnit.Unset()
}

// GetRecordingSid returns the RecordingSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetRecordingSid() string {
	if o == nil || o.RecordingSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.RecordingSid.Get()
}

// GetRecordingSidOk returns a tuple with the RecordingSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetRecordingSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecordingSid.Get(), o.RecordingSid.IsSet()
}

// HasRecordingSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasRecordingSid() bool {
	if o != nil && o.RecordingSid.IsSet() {
		return true
	}

	return false
}

// SetRecordingSid gets a reference to the given NullableString and assigns it to the RecordingSid field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetRecordingSid(v string) {
	o.RecordingSid.Set(&v)
}
// SetRecordingSidNil sets the value for RecordingSid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetRecordingSidNil() {
	o.RecordingSid.Set(nil)
}

// UnsetRecordingSid ensures that no value is present for RecordingSid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetRecordingSid() {
	o.RecordingSid.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetSid() {
	o.Sid.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetStatus() {
	o.Status.Unset()
}

// GetTranscriptionText returns the TranscriptionText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetTranscriptionText() string {
	if o == nil || o.TranscriptionText.Get() == nil {
		var ret string
		return ret
	}
	return *o.TranscriptionText.Get()
}

// GetTranscriptionTextOk returns a tuple with the TranscriptionText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetTranscriptionTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TranscriptionText.Get(), o.TranscriptionText.IsSet()
}

// HasTranscriptionText returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasTranscriptionText() bool {
	if o != nil && o.TranscriptionText.IsSet() {
		return true
	}

	return false
}

// SetTranscriptionText gets a reference to the given NullableString and assigns it to the TranscriptionText field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetTranscriptionText(v string) {
	o.TranscriptionText.Set(&v)
}
// SetTranscriptionTextNil sets the value for TranscriptionText to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetTranscriptionTextNil() {
	o.TranscriptionText.Set(nil)
}

// UnsetTranscriptionText ensures that no value is present for TranscriptionText, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetTranscriptionText() {
	o.TranscriptionText.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetType() {
	o.Type.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountRecordingRecordingTranscription) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountRecordingRecordingTranscription) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountRecordingRecordingTranscription) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountRecordingRecordingTranscription) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountRecordingRecordingTranscription) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountRecordingRecordingTranscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.ApiVersion.IsSet() {
		toSerialize["api_version"] = o.ApiVersion.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.PriceUnit.IsSet() {
		toSerialize["price_unit"] = o.PriceUnit.Get()
	}
	if o.RecordingSid.IsSet() {
		toSerialize["recording_sid"] = o.RecordingSid.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TranscriptionText.IsSet() {
		toSerialize["transcription_text"] = o.TranscriptionText.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountRecordingRecordingTranscription struct {
	value *ApiV2010AccountRecordingRecordingTranscription
	isSet bool
}

func (v NullableApiV2010AccountRecordingRecordingTranscription) Get() *ApiV2010AccountRecordingRecordingTranscription {
	return v.value
}

func (v *NullableApiV2010AccountRecordingRecordingTranscription) Set(val *ApiV2010AccountRecordingRecordingTranscription) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountRecordingRecordingTranscription) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountRecordingRecordingTranscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountRecordingRecordingTranscription(val *ApiV2010AccountRecordingRecordingTranscription) *NullableApiV2010AccountRecordingRecordingTranscription {
	return &NullableApiV2010AccountRecordingRecordingTranscription{value: val, isSet: true}
}

func (v NullableApiV2010AccountRecordingRecordingTranscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountRecordingRecordingTranscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


