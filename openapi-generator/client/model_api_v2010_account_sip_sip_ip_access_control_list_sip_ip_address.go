/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountSipSipIpAccessControlListSipIpAddress struct for ApiV2010AccountSipSipIpAccessControlListSipIpAddress
type ApiV2010AccountSipSipIpAccessControlListSipIpAddress struct {
	// The unique id of the Account that is responsible for this resource.
	AccountSid NullableString `json:"account_sid,omitempty"`
	// An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.
	CidrPrefixLength NullableInt32 `json:"cidr_prefix_length,omitempty"`
	// The date that this resource was created, given as GMT in RFC 2822 format.
	DateCreated NullableString `json:"date_created,omitempty"`
	// The date that this resource was last updated, given as GMT in RFC 2822 format.
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// A human readable descriptive text for this resource, up to 64 characters long.
	FriendlyName NullableString `json:"friendly_name,omitempty"`
	// The unique id of the IpAccessControlList resource that includes this resource.
	IpAccessControlListSid NullableString `json:"ip_access_control_list_sid,omitempty"`
	// An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.
	IpAddress NullableString `json:"ip_address,omitempty"`
	// A 34 character string that uniquely identifies this resource.
	Sid NullableString `json:"sid,omitempty"`
	// The URI for this resource, relative to https://api.twilio.com
	Uri NullableString `json:"uri,omitempty"`
}

// NewApiV2010AccountSipSipIpAccessControlListSipIpAddress instantiates a new ApiV2010AccountSipSipIpAccessControlListSipIpAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountSipSipIpAccessControlListSipIpAddress() *ApiV2010AccountSipSipIpAccessControlListSipIpAddress {
	this := ApiV2010AccountSipSipIpAccessControlListSipIpAddress{}
	return &this
}

// NewApiV2010AccountSipSipIpAccessControlListSipIpAddressWithDefaults instantiates a new ApiV2010AccountSipSipIpAccessControlListSipIpAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountSipSipIpAccessControlListSipIpAddressWithDefaults() *ApiV2010AccountSipSipIpAccessControlListSipIpAddress {
	this := ApiV2010AccountSipSipIpAccessControlListSipIpAddress{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetCidrPrefixLength returns the CidrPrefixLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetCidrPrefixLength() int32 {
	if o == nil || o.CidrPrefixLength.Get() == nil {
		var ret int32
		return ret
	}
	return *o.CidrPrefixLength.Get()
}

// GetCidrPrefixLengthOk returns a tuple with the CidrPrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetCidrPrefixLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CidrPrefixLength.Get(), o.CidrPrefixLength.IsSet()
}

// HasCidrPrefixLength returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasCidrPrefixLength() bool {
	if o != nil && o.CidrPrefixLength.IsSet() {
		return true
	}

	return false
}

// SetCidrPrefixLength gets a reference to the given NullableInt32 and assigns it to the CidrPrefixLength field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetCidrPrefixLength(v int32) {
	o.CidrPrefixLength.Set(&v)
}
// SetCidrPrefixLengthNil sets the value for CidrPrefixLength to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetCidrPrefixLengthNil() {
	o.CidrPrefixLength.Set(nil)
}

// UnsetCidrPrefixLength ensures that no value is present for CidrPrefixLength, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetCidrPrefixLength() {
	o.CidrPrefixLength.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetFriendlyName() string {
	if o == nil || o.FriendlyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}
// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetIpAccessControlListSid returns the IpAccessControlListSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetIpAccessControlListSid() string {
	if o == nil || o.IpAccessControlListSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpAccessControlListSid.Get()
}

// GetIpAccessControlListSidOk returns a tuple with the IpAccessControlListSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetIpAccessControlListSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAccessControlListSid.Get(), o.IpAccessControlListSid.IsSet()
}

// HasIpAccessControlListSid returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasIpAccessControlListSid() bool {
	if o != nil && o.IpAccessControlListSid.IsSet() {
		return true
	}

	return false
}

// SetIpAccessControlListSid gets a reference to the given NullableString and assigns it to the IpAccessControlListSid field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetIpAccessControlListSid(v string) {
	o.IpAccessControlListSid.Set(&v)
}
// SetIpAccessControlListSidNil sets the value for IpAccessControlListSid to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetIpAccessControlListSidNil() {
	o.IpAccessControlListSid.Set(nil)
}

// UnsetIpAccessControlListSid ensures that no value is present for IpAccessControlListSid, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetIpAccessControlListSid() {
	o.IpAccessControlListSid.Unset()
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetIpAddress() string {
	if o == nil || o.IpAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpAddress.Get()
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAddress.Get(), o.IpAddress.IsSet()
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasIpAddress() bool {
	if o != nil && o.IpAddress.IsSet() {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given NullableString and assigns it to the IpAddress field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetIpAddress(v string) {
	o.IpAddress.Set(&v)
}
// SetIpAddressNil sets the value for IpAddress to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetIpAddressNil() {
	o.IpAddress.Set(nil)
}

// UnsetIpAddress ensures that no value is present for IpAddress, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetIpAddress() {
	o.IpAddress.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetSid() {
	o.Sid.Unset()
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetUri() string {
	if o == nil || o.Uri.Get() == nil {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnsetUri() {
	o.Uri.Unset()
}

func (o ApiV2010AccountSipSipIpAccessControlListSipIpAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.CidrPrefixLength.IsSet() {
		toSerialize["cidr_prefix_length"] = o.CidrPrefixLength.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["friendly_name"] = o.FriendlyName.Get()
	}
	if o.IpAccessControlListSid.IsSet() {
		toSerialize["ip_access_control_list_sid"] = o.IpAccessControlListSid.Get()
	}
	if o.IpAddress.IsSet() {
		toSerialize["ip_address"] = o.IpAddress.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress struct {
	value *ApiV2010AccountSipSipIpAccessControlListSipIpAddress
	isSet bool
}

func (v NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress) Get() *ApiV2010AccountSipSipIpAccessControlListSipIpAddress {
	return v.value
}

func (v *NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress) Set(val *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountSipSipIpAccessControlListSipIpAddress(val *ApiV2010AccountSipSipIpAccessControlListSipIpAddress) *NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress {
	return &NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress{value: val, isSet: true}
}

func (v NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountSipSipIpAccessControlListSipIpAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


