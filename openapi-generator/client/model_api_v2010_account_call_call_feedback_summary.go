/*
Twilio - Api

This is the public Twilio REST API.

API version: 1.29.1
Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiV2010AccountCallCallFeedbackSummary struct for ApiV2010AccountCallCallFeedbackSummary
type ApiV2010AccountCallCallFeedbackSummary struct {
	// The unique sid that identifies this account
	AccountSid NullableString `json:"account_sid,omitempty"`
	// The total number of calls
	CallCount NullableInt32 `json:"call_count,omitempty"`
	// The total number of calls with a feedback entry
	CallFeedbackCount NullableInt32 `json:"call_feedback_count,omitempty"`
	// The date this resource was created
	DateCreated NullableString `json:"date_created,omitempty"`
	// The date this resource was last updated
	DateUpdated NullableString `json:"date_updated,omitempty"`
	// The latest feedback entry date in the summary
	EndDate NullableString `json:"end_date,omitempty"`
	// Whether the feedback summary includes subaccounts
	IncludeSubaccounts NullableBool `json:"include_subaccounts,omitempty"`
	// Issues experienced during the call
	Issues []interface{} `json:"issues,omitempty"`
	// The average QualityScore of the feedback entries
	QualityScoreAverage NullableFloat32 `json:"quality_score_average,omitempty"`
	// The median QualityScore of the feedback entries
	QualityScoreMedian NullableFloat32 `json:"quality_score_median,omitempty"`
	// The standard deviation of the quality scores
	QualityScoreStandardDeviation NullableFloat32 `json:"quality_score_standard_deviation,omitempty"`
	// A string that uniquely identifies this feedback entry
	Sid NullableString `json:"sid,omitempty"`
	// The earliest feedback entry date in the summary
	StartDate NullableString `json:"start_date,omitempty"`
	// The status of the feedback summary
	Status NullableString `json:"status,omitempty"`
}

// NewApiV2010AccountCallCallFeedbackSummary instantiates a new ApiV2010AccountCallCallFeedbackSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2010AccountCallCallFeedbackSummary() *ApiV2010AccountCallCallFeedbackSummary {
	this := ApiV2010AccountCallCallFeedbackSummary{}
	return &this
}

// NewApiV2010AccountCallCallFeedbackSummaryWithDefaults instantiates a new ApiV2010AccountCallCallFeedbackSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2010AccountCallCallFeedbackSummaryWithDefaults() *ApiV2010AccountCallCallFeedbackSummary {
	this := ApiV2010AccountCallCallFeedbackSummary{}
	return &this
}

// GetAccountSid returns the AccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetAccountSid() string {
	if o == nil || o.AccountSid.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSid.Get()
}

// GetAccountSidOk returns a tuple with the AccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSid.Get(), o.AccountSid.IsSet()
}

// HasAccountSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasAccountSid() bool {
	if o != nil && o.AccountSid.IsSet() {
		return true
	}

	return false
}

// SetAccountSid gets a reference to the given NullableString and assigns it to the AccountSid field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetAccountSid(v string) {
	o.AccountSid.Set(&v)
}
// SetAccountSidNil sets the value for AccountSid to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetAccountSidNil() {
	o.AccountSid.Set(nil)
}

// UnsetAccountSid ensures that no value is present for AccountSid, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetAccountSid() {
	o.AccountSid.Unset()
}

// GetCallCount returns the CallCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetCallCount() int32 {
	if o == nil || o.CallCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.CallCount.Get()
}

// GetCallCountOk returns a tuple with the CallCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetCallCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallCount.Get(), o.CallCount.IsSet()
}

// HasCallCount returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasCallCount() bool {
	if o != nil && o.CallCount.IsSet() {
		return true
	}

	return false
}

// SetCallCount gets a reference to the given NullableInt32 and assigns it to the CallCount field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetCallCount(v int32) {
	o.CallCount.Set(&v)
}
// SetCallCountNil sets the value for CallCount to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetCallCountNil() {
	o.CallCount.Set(nil)
}

// UnsetCallCount ensures that no value is present for CallCount, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetCallCount() {
	o.CallCount.Unset()
}

// GetCallFeedbackCount returns the CallFeedbackCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetCallFeedbackCount() int32 {
	if o == nil || o.CallFeedbackCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.CallFeedbackCount.Get()
}

// GetCallFeedbackCountOk returns a tuple with the CallFeedbackCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetCallFeedbackCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallFeedbackCount.Get(), o.CallFeedbackCount.IsSet()
}

// HasCallFeedbackCount returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasCallFeedbackCount() bool {
	if o != nil && o.CallFeedbackCount.IsSet() {
		return true
	}

	return false
}

// SetCallFeedbackCount gets a reference to the given NullableInt32 and assigns it to the CallFeedbackCount field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetCallFeedbackCount(v int32) {
	o.CallFeedbackCount.Set(&v)
}
// SetCallFeedbackCountNil sets the value for CallFeedbackCount to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetCallFeedbackCountNil() {
	o.CallFeedbackCount.Set(nil)
}

// UnsetCallFeedbackCount ensures that no value is present for CallFeedbackCount, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetCallFeedbackCount() {
	o.CallFeedbackCount.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetDateCreated() string {
	if o == nil || o.DateCreated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetDateCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableString and assigns it to the DateCreated field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetDateCreated(v string) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetDateUpdated() string {
	if o == nil || o.DateUpdated.Get() == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated.Get()
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetDateUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateUpdated.Get(), o.DateUpdated.IsSet()
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasDateUpdated() bool {
	if o != nil && o.DateUpdated.IsSet() {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given NullableString and assigns it to the DateUpdated field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetDateUpdated(v string) {
	o.DateUpdated.Set(&v)
}
// SetDateUpdatedNil sets the value for DateUpdated to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetDateUpdatedNil() {
	o.DateUpdated.Set(nil)
}

// UnsetDateUpdated ensures that no value is present for DateUpdated, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetDateUpdated() {
	o.DateUpdated.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetEndDate() string {
	if o == nil || o.EndDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableString and assigns it to the EndDate field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetEndDate(v string) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetIncludeSubaccounts returns the IncludeSubaccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetIncludeSubaccounts() bool {
	if o == nil || o.IncludeSubaccounts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IncludeSubaccounts.Get()
}

// GetIncludeSubaccountsOk returns a tuple with the IncludeSubaccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetIncludeSubaccountsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeSubaccounts.Get(), o.IncludeSubaccounts.IsSet()
}

// HasIncludeSubaccounts returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasIncludeSubaccounts() bool {
	if o != nil && o.IncludeSubaccounts.IsSet() {
		return true
	}

	return false
}

// SetIncludeSubaccounts gets a reference to the given NullableBool and assigns it to the IncludeSubaccounts field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetIncludeSubaccounts(v bool) {
	o.IncludeSubaccounts.Set(&v)
}
// SetIncludeSubaccountsNil sets the value for IncludeSubaccounts to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetIncludeSubaccountsNil() {
	o.IncludeSubaccounts.Set(nil)
}

// UnsetIncludeSubaccounts ensures that no value is present for IncludeSubaccounts, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetIncludeSubaccounts() {
	o.IncludeSubaccounts.Unset()
}

// GetIssues returns the Issues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetIssues() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetIssuesOk() ([]interface{}, bool) {
	if o == nil || o.Issues == nil {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasIssues() bool {
	if o != nil && o.Issues != nil {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []interface{} and assigns it to the Issues field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetIssues(v []interface{}) {
	o.Issues = v
}

// GetQualityScoreAverage returns the QualityScoreAverage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetQualityScoreAverage() float32 {
	if o == nil || o.QualityScoreAverage.Get() == nil {
		var ret float32
		return ret
	}
	return *o.QualityScoreAverage.Get()
}

// GetQualityScoreAverageOk returns a tuple with the QualityScoreAverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetQualityScoreAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QualityScoreAverage.Get(), o.QualityScoreAverage.IsSet()
}

// HasQualityScoreAverage returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasQualityScoreAverage() bool {
	if o != nil && o.QualityScoreAverage.IsSet() {
		return true
	}

	return false
}

// SetQualityScoreAverage gets a reference to the given NullableFloat32 and assigns it to the QualityScoreAverage field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetQualityScoreAverage(v float32) {
	o.QualityScoreAverage.Set(&v)
}
// SetQualityScoreAverageNil sets the value for QualityScoreAverage to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetQualityScoreAverageNil() {
	o.QualityScoreAverage.Set(nil)
}

// UnsetQualityScoreAverage ensures that no value is present for QualityScoreAverage, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetQualityScoreAverage() {
	o.QualityScoreAverage.Unset()
}

// GetQualityScoreMedian returns the QualityScoreMedian field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetQualityScoreMedian() float32 {
	if o == nil || o.QualityScoreMedian.Get() == nil {
		var ret float32
		return ret
	}
	return *o.QualityScoreMedian.Get()
}

// GetQualityScoreMedianOk returns a tuple with the QualityScoreMedian field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetQualityScoreMedianOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QualityScoreMedian.Get(), o.QualityScoreMedian.IsSet()
}

// HasQualityScoreMedian returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasQualityScoreMedian() bool {
	if o != nil && o.QualityScoreMedian.IsSet() {
		return true
	}

	return false
}

// SetQualityScoreMedian gets a reference to the given NullableFloat32 and assigns it to the QualityScoreMedian field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetQualityScoreMedian(v float32) {
	o.QualityScoreMedian.Set(&v)
}
// SetQualityScoreMedianNil sets the value for QualityScoreMedian to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetQualityScoreMedianNil() {
	o.QualityScoreMedian.Set(nil)
}

// UnsetQualityScoreMedian ensures that no value is present for QualityScoreMedian, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetQualityScoreMedian() {
	o.QualityScoreMedian.Unset()
}

// GetQualityScoreStandardDeviation returns the QualityScoreStandardDeviation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetQualityScoreStandardDeviation() float32 {
	if o == nil || o.QualityScoreStandardDeviation.Get() == nil {
		var ret float32
		return ret
	}
	return *o.QualityScoreStandardDeviation.Get()
}

// GetQualityScoreStandardDeviationOk returns a tuple with the QualityScoreStandardDeviation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetQualityScoreStandardDeviationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QualityScoreStandardDeviation.Get(), o.QualityScoreStandardDeviation.IsSet()
}

// HasQualityScoreStandardDeviation returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasQualityScoreStandardDeviation() bool {
	if o != nil && o.QualityScoreStandardDeviation.IsSet() {
		return true
	}

	return false
}

// SetQualityScoreStandardDeviation gets a reference to the given NullableFloat32 and assigns it to the QualityScoreStandardDeviation field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetQualityScoreStandardDeviation(v float32) {
	o.QualityScoreStandardDeviation.Set(&v)
}
// SetQualityScoreStandardDeviationNil sets the value for QualityScoreStandardDeviation to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetQualityScoreStandardDeviationNil() {
	o.QualityScoreStandardDeviation.Set(nil)
}

// UnsetQualityScoreStandardDeviation ensures that no value is present for QualityScoreStandardDeviation, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetQualityScoreStandardDeviation() {
	o.QualityScoreStandardDeviation.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetSid() string {
	if o == nil || o.Sid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetSid() {
	o.Sid.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetStartDate() string {
	if o == nil || o.StartDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableString and assigns it to the StartDate field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetStartDate(v string) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2010AccountCallCallFeedbackSummary) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2010AccountCallCallFeedbackSummary) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV2010AccountCallCallFeedbackSummary) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ApiV2010AccountCallCallFeedbackSummary) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ApiV2010AccountCallCallFeedbackSummary) UnsetStatus() {
	o.Status.Unset()
}

func (o ApiV2010AccountCallCallFeedbackSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSid.IsSet() {
		toSerialize["account_sid"] = o.AccountSid.Get()
	}
	if o.CallCount.IsSet() {
		toSerialize["call_count"] = o.CallCount.Get()
	}
	if o.CallFeedbackCount.IsSet() {
		toSerialize["call_feedback_count"] = o.CallFeedbackCount.Get()
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.DateUpdated.IsSet() {
		toSerialize["date_updated"] = o.DateUpdated.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["end_date"] = o.EndDate.Get()
	}
	if o.IncludeSubaccounts.IsSet() {
		toSerialize["include_subaccounts"] = o.IncludeSubaccounts.Get()
	}
	if o.Issues != nil {
		toSerialize["issues"] = o.Issues
	}
	if o.QualityScoreAverage.IsSet() {
		toSerialize["quality_score_average"] = o.QualityScoreAverage.Get()
	}
	if o.QualityScoreMedian.IsSet() {
		toSerialize["quality_score_median"] = o.QualityScoreMedian.Get()
	}
	if o.QualityScoreStandardDeviation.IsSet() {
		toSerialize["quality_score_standard_deviation"] = o.QualityScoreStandardDeviation.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	if o.StartDate.IsSet() {
		toSerialize["start_date"] = o.StartDate.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApiV2010AccountCallCallFeedbackSummary struct {
	value *ApiV2010AccountCallCallFeedbackSummary
	isSet bool
}

func (v NullableApiV2010AccountCallCallFeedbackSummary) Get() *ApiV2010AccountCallCallFeedbackSummary {
	return v.value
}

func (v *NullableApiV2010AccountCallCallFeedbackSummary) Set(val *ApiV2010AccountCallCallFeedbackSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2010AccountCallCallFeedbackSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2010AccountCallCallFeedbackSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2010AccountCallCallFeedbackSummary(val *ApiV2010AccountCallCallFeedbackSummary) *NullableApiV2010AccountCallCallFeedbackSummary {
	return &NullableApiV2010AccountCallCallFeedbackSummary{value: val, isSet: true}
}

func (v NullableApiV2010AccountCallCallFeedbackSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2010AccountCallCallFeedbackSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


